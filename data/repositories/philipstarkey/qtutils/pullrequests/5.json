{"rendered": {"description": {"raw": "separate `print()` and `write()` methods for the output box, one of which obeys the semantics of the python `print()` function (newlines, separators), and the other of which is more like `file.write()`, with no newlines added or anything. \r\n\r\nAdded colour, bold and italics options for text added with these methods\r\n(or text received over the socket).\r\n\r\nThe old `output(text, red=False)` method is retained for backward compatibility,  but is simply a wrapper for `write(text, color='red' if red else WHITE)`\r\n\r\nWe can use the colour to make labscript program output more readable - to distinguish between program output and user code output, to distinguish between messages that are waiting on a result and messages indicating success and failure, etc. \r\n\r\nThis submodule works in Python 2 or 3.\r\n\r\n![outputbox_screenshot.png](https://bitbucket.org/repo/ek5pMo9/images/3453631655-outputbox_screenshot.png)", "markup": "markdown", "html": "<p>separate <code>print()</code> and <code>write()</code> methods for the output box, one of which obeys the semantics of the python <code>print()</code> function (newlines, separators), and the other of which is more like <code>file.write()</code>, with no newlines added or anything. </p>\n<p>Added colour, bold and italics options for text added with these methods\n(or text received over the socket).</p>\n<p>The old <code>output(text, red=False)</code> method is retained for backward compatibility,  but is simply a wrapper for <code>write(text, color='red' if red else WHITE)</code></p>\n<p>We can use the colour to make labscript program output more readable - to distinguish between program output and user code output, to distinguish between messages that are waiting on a result and messages indicating success and failure, etc. </p>\n<p>This submodule works in Python 2 or 3.</p>\n<p><img alt=\"outputbox_screenshot.png\" src=\"data/bitbucket.org/repo/ek5pMo9/images/3453631655-outputbox_screenshot.png\" /></p>", "type": "rendered"}, "title": {"raw": "Standardising interface, colour, and bold", "markup": "markdown", "html": "<p>Standardising interface, colour, and bold</p>", "type": "rendered"}}, "type": "pullrequest", "description": "separate `print()` and `write()` methods for the output box, one of which obeys the semantics of the python `print()` function (newlines, separators), and the other of which is more like `file.write()`, with no newlines added or anything. \r\n\r\nAdded colour, bold and italics options for text added with these methods\r\n(or text received over the socket).\r\n\r\nThe old `output(text, red=False)` method is retained for backward compatibility,  but is simply a wrapper for `write(text, color='red' if red else WHITE)`\r\n\r\nWe can use the colour to make labscript program output more readable - to distinguish between program output and user code output, to distinguish between messages that are waiting on a result and messages indicating success and failure, etc. \r\n\r\nThis submodule works in Python 2 or 3.\r\n\r\n![outputbox_screenshot.png](https://bitbucket.org/repo/ek5pMo9/images/3453631655-outputbox_screenshot.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/pullrequests/5/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/diffstat/philipstarkey/qtutils:ef9cb78d5839%0Dbc1c47fec4a6?from_pullrequest_id=5"}, "commits": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/5/commits.json"}, "self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/5.json"}, "comments": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/5/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/pullrequests/5/merge"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/5"}, "activity": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/5/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/diff/philipstarkey/qtutils:ef9cb78d5839%0Dbc1c47fec4a6?from_pullrequest_id=5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/pullrequests/5/approve"}, "statuses": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/5/statuses_page=1.json"}}, "title": "Standardising interface, colour, and bold", "close_source_branch": true, "reviewers": [{"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}], "id": 5, "destination": {"commit": {"hash": "bc1c47fec4a6", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/bc1c47fec4a6.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/bc1c47fec4a6"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "created_on": "2018-02-26T07:12:12.983985+00:00", "summary": {"raw": "separate `print()` and `write()` methods for the output box, one of which obeys the semantics of the python `print()` function (newlines, separators), and the other of which is more like `file.write()`, with no newlines added or anything. \r\n\r\nAdded colour, bold and italics options for text added with these methods\r\n(or text received over the socket).\r\n\r\nThe old `output(text, red=False)` method is retained for backward compatibility,  but is simply a wrapper for `write(text, color='red' if red else WHITE)`\r\n\r\nWe can use the colour to make labscript program output more readable - to distinguish between program output and user code output, to distinguish between messages that are waiting on a result and messages indicating success and failure, etc. \r\n\r\nThis submodule works in Python 2 or 3.\r\n\r\n![outputbox_screenshot.png](https://bitbucket.org/repo/ek5pMo9/images/3453631655-outputbox_screenshot.png)", "markup": "markdown", "html": "<p>separate <code>print()</code> and <code>write()</code> methods for the output box, one of which obeys the semantics of the python <code>print()</code> function (newlines, separators), and the other of which is more like <code>file.write()</code>, with no newlines added or anything. </p>\n<p>Added colour, bold and italics options for text added with these methods\n(or text received over the socket).</p>\n<p>The old <code>output(text, red=False)</code> method is retained for backward compatibility,  but is simply a wrapper for <code>write(text, color='red' if red else WHITE)</code></p>\n<p>We can use the colour to make labscript program output more readable - to distinguish between program output and user code output, to distinguish between messages that are waiting on a result and messages indicating success and failure, etc. </p>\n<p>This submodule works in Python 2 or 3.</p>\n<p><img alt=\"outputbox_screenshot.png\" src=\"data/bitbucket.org/repo/ek5pMo9/images/3453631655-outputbox_screenshot.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "59c8c39b1004", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/commit/59c8c39b1004"}, "html": {"href": "#!/cbillington/qtutils/commits/59c8c39b1004"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils"}, "html": {"href": "#!/cbillington/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0c98b491-bfb0-4ce7-9729-bc4606436bde}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "cbillington/qtutils", "uuid": "{0c98b491-bfb0-4ce7-9729-bc4606436bde}"}, "branch": {"name": "feature"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}}, {"role": "PARTICIPANT", "participated_on": "2018-02-26T22:40:48.455472+00:00", "type": "participant", "approved": false, "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, {"role": "PARTICIPANT", "participated_on": "2018-02-26T15:52:35.732034+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}}], "reason": "", "updated_on": "2018-02-27T00:11:03.254004+00:00", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "merge_commit": {"hash": "ef9cb78d5839", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/ef9cb78d5839.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/ef9cb78d5839"}}}, "closed_by": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}