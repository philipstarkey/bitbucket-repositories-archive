{"pagelen": 50, "values": [{"update": {"description": "Make outputbox more responsive for large numbers of lines.\r\nThe time to print lines to the GUI scales with the number of lines, and for only\r\nmodest numbers of lines, the processing time in the GUI thread well exceeds the overhead\r\nof posting the function call to the main thread. Therefore one might as well\r\nmake smaller batches, and update the GUI more frequently to not hang the GUI in\r\none large call, and so that output is continuously produced rather than all at\r\nonce after a hang. A batch size as small as ten seems to have good performance.\r\n\r\nusing `inmain_decorator(False)` to not block on calling `add_text()`  also seems to make output faster, and probably more importantly, resolves a deadlock. If a GUI thread writes more than the zmq high-water-mark worth of text to the outputbox, the PUSH socket it is writing to blocks, and the outputbox's mainloop is waiting on the GUI to call `add_text`, so it cannot read any new messages, and your app is deadlocked in the GUI thread.\r\n\r\nThis change actually seems to make output faster all up, i.e. more throughput,\r\nnot just better responsiveness. I'm not quite sure why (really doesn't seem like I'm imagining it but I guess I might be), but it is a nice improvement.\r\n\r\nIf you want to test the difference, try having a lyse routine do:\r\n\r\n```python\r\nfor name in sys.modules:\r\n    print(name)\r\n```\r\nOn my computer at least, this is much nicer with this change (smooth printing text scrolling quickly) than without it (hang for maybe a second and then all the text at once).", "title": "Outputbox responsiveness and deadlock fix", "destination": {"commit": {"hash": "412580d1cb95", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/412580d1cb95.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/412580d1cb95"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4aa7c2be36a4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/commit/4aa7c2be36a4"}, "html": {"href": "#!/cbillington/qtutils/commits/4aa7c2be36a4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils"}, "html": {"href": "#!/cbillington/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0c98b491-bfb0-4ce7-9729-bc4606436bde}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "cbillington/qtutils", "uuid": "{0c98b491-bfb0-4ce7-9729-bc4606436bde}"}, "branch": {"name": "default"}}, "state": "MERGED", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-05-20T14:49:27.301220+00:00"}, "pull_request": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/21.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/21"}}, "title": "Outputbox responsiveness and deadlock fix"}}, {"update": {"description": "Make outputbox more responsive for large numbers of lines.\r\nThe time to print lines to the GUI scales with the number of lines, and for only\r\nmodest numbers of lines, the processing time in the GUI thread well exceeds the overhead\r\nof posting the function call to the main thread. Therefore one might as well\r\nmake smaller batches, and update the GUI more frequently to not hang the GUI in\r\none large call, and so that output is continuously produced rather than all at\r\nonce after a hang. A batch size as small as ten seems to have good performance.\r\n\r\nusing `inmain_decorator(False)` to not block on calling `add_text()`  also seems to make output faster, and probably more importantly, resolves a deadlock. If a GUI thread writes more than the zmq high-water-mark worth of text to the outputbox, the PUSH socket it is writing to blocks, and the outputbox's mainloop is waiting on the GUI to call `add_text`, so it cannot read any new messages, and your app is deadlocked in the GUI thread.\r\n\r\nThis change actually seems to make output faster all up, i.e. more throughput,\r\nnot just better responsiveness. I'm not quite sure why (really doesn't seem like I'm imagining it but I guess I might be), but it is a nice improvement.\r\n\r\nIf you want to test the difference, try having a lyse routine do:\r\n\r\n```python\r\nfor name in sys.modules:\r\n    print(name)\r\n```\r\nOn my computer at least, this is much nicer with this change (smooth printing text scrolling quickly) than without it (hang for maybe a second and then all the text at once).", "title": "Outputbox responsiveness and deadlock fix", "destination": {"commit": {"hash": "412580d1cb95", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/412580d1cb95.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/412580d1cb95"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4aa7c2be36a4", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/commit/4aa7c2be36a4"}, "html": {"href": "#!/cbillington/qtutils/commits/4aa7c2be36a4"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils"}, "html": {"href": "#!/cbillington/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0c98b491-bfb0-4ce7-9729-bc4606436bde}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "cbillington/qtutils", "uuid": "{0c98b491-bfb0-4ce7-9729-bc4606436bde}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-05-13T16:19:36.848603+00:00"}, "pull_request": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/21.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/21"}}, "title": "Outputbox responsiveness and deadlock fix"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/21/comments/101703672.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/21/_/diff#comment-101703672"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/21.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/21"}}, "title": "Outputbox responsiveness and deadlock fix"}, "content": {"raw": "Will merge and release on Monday May 20th if there are no comments ", "markup": "markdown", "html": "<p>Will merge and release on Monday May 20th if there are no comments </p>", "type": "rendered"}, "created_on": "2019-05-12T23:13:50.050179+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2019-05-12T23:13:50.057117+00:00", "type": "pullrequest_comment", "id": 101703672}, "pull_request": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/21.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/21"}}, "title": "Outputbox responsiveness and deadlock fix"}}, {"update": {"description": "Make outputbox more responsive for large numbers of lines.\r\nThe time to print lines to the GUI scales with the number of lines, and for only\r\nmodest numbers of lines, the processing time in the GUI thread well exceeds the overhead\r\nof posting the function call to the main thread. Therefore one might as well\r\nmake smaller batches, and update the GUI more frequently to not hang the GUI in\r\none large call, and so that output is continuously produced rather than all at\r\nonce after a hang. A batch size as small as ten seems to have good performance.\r\n\r\nusing `inmain_decorator(False)` to not block on calling `add_text()`  also seems to make output faster, and probably more importantly, resolves a deadlock. If a GUI thread writes more than the zmq high-water-mark worth of text to the outputbox, the PUSH socket it is writing to blocks, and the outputbox's mainloop is waiting on the GUI to call `add_text`, so it cannot read any new messages, and your app is deadlocked in the GUI thread.\r\n\r\nThis change actually seems to make output faster all up, i.e. more throughput,\r\nnot just better responsiveness. I'm not quite sure why (really doesn't seem like I'm imagining it but I guess I might be), but it is a nice improvement.\r\n\r\nIf you want to test the difference, try having a lyse routine do:\r\n\r\n```python\r\nfor name in sys.modules:\r\n    print(name)\r\n```\r\nOn my computer at least, this is much nicer with this change (smooth printing text scrolling quickly) than without it (hang for maybe a second and then all the text at once).", "title": "Outputbox responsiveness and deadlock fix", "destination": {"commit": {"hash": "412580d1cb95", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/412580d1cb95.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/412580d1cb95"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "93dc4e082a60", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/commit/93dc4e082a60"}, "html": {"href": "#!/cbillington/qtutils/commits/93dc4e082a60"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils"}, "html": {"href": "#!/cbillington/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0c98b491-bfb0-4ce7-9729-bc4606436bde}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "cbillington/qtutils", "uuid": "{0c98b491-bfb0-4ce7-9729-bc4606436bde}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-05-10T02:36:19.209760+00:00"}, "pull_request": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/21.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/21"}}, "title": "Outputbox responsiveness and deadlock fix"}}, {"update": {"description": "Make outputbox more responsive for large numbers of lines.\r\nThe time to print lines to the GUI scales with the number of lines, and for only\r\nmodest numbers of lines, the processing time in the GUI thread well exceeds the overhead\r\nof posting the function call to the main thread. Therefore one might as well\r\nmake smaller batches, and update the GUI more frequently to not hang the GUI in\r\none large call, and so that output is continuously produced rather than all at\r\nonce after a hang. A batch size as small as ten seems to have good performance.\r\n\r\nusing `inmain_decorator(False)` to not block on calling `add_text()`  also seems to make output faster, and probably more importantly, resolves a deadlock. If a GUI thread writes more than the zmq high-water-mark worth of text to the outputbox, the PUSH socket it is writing to blocks, and the outputbox's mainloop is waiting on the GUI to call `add_text`, so it cannot read any new messages, and your app is deadlocked in the GUI thread.\r\n\r\nThis change actually seems to make output faster all up, i.e. more throughput,\r\nnot just better responsiveness. I'm not quite sure why (really doesn't seem like I'm imagining it but I guess I might be), but it is a nice improvement.\r\n\r\nIf you want to test the difference, try having a lyse routine do:\r\n\r\n```python\r\nfor name in sys.modules:\r\n    print(name)\r\n```\r\nOn my computer at least, this is much nicer with this change (smooth printing text scrolling quickly) than without it (hang for maybe a second and then all the text at once).", "title": "Outputbox responsiveness and deadlock fix", "destination": {"commit": {"hash": "412580d1cb95", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/412580d1cb95.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/412580d1cb95"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "93dc4e082a60", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/commit/93dc4e082a60"}, "html": {"href": "#!/cbillington/qtutils/commits/93dc4e082a60"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils"}, "html": {"href": "#!/cbillington/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0c98b491-bfb0-4ce7-9729-bc4606436bde}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "cbillington/qtutils", "uuid": "{0c98b491-bfb0-4ce7-9729-bc4606436bde}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "date": "2019-05-10T02:36:19.145643+00:00"}, "pull_request": {"type": "pullrequest", "id": 21, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/21.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/21"}}, "title": "Outputbox responsiveness and deadlock fix"}}]}