{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41367694.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41367694"}}, "parent": {"id": 41312797, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41312797.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41312797"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "You're right that it is ultimately up to application code to be compatible with the qt versions it wants to be compatible with, so they can always fall back on looking at QT_ENV to do different things. But it is inconsistent for widgets instantiated in code to be patched and ones coming from a .ui file to not be patched, so I'd like to get this working if possible (even if we're not using the patched methods in the labscript suite at the moment). \n\nAre you sure the patching function is to act on instances? [Here](https://github.com/spyder-ide/qtpy/blob/94298feed928e21842c9982d1386e15c568b8232/qtpy/QtWidgets.py) it looks like it is called once on the class.\n\nAnd patching the class like this appears to work for me. Here's a minimal example with a .ui file test.ui:\n\n\n```\n#!xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ui version=\"4.0\">\n <class>Form</class>\n <widget class=\"QWidget\" name=\"Form\">\n  <property name=\"geometry\">\n   <rect>\n    <x>0</x>\n    <y>0</y>\n    <width>400</width>\n    <height>300</height>\n   </rect>\n  </property>\n  <property name=\"windowTitle\">\n   <string>Form</string>\n  </property>\n  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n   <item>\n    <widget class=\"QPushButton\" name=\"pushButton\">\n     <property name=\"text\">\n      <string>Patched button</string>\n     </property>\n    </widget>\n   </item>\n  </layout>\n </widget>\n <resources/>\n <connections/>\n</ui>\n\n```\n\nAnd python code using the existing version of qtutils (that is, without this pull request):\n\n\n```\n#!python\n\nimport sys\n\nfrom PyQt4.QtGui import *\nfrom PyQt4.QtCore import *\nfrom PyQt4.Qt import *\n\nfrom qtutils import UiLoader\n\ndef event(self, event):\n    if event.type() == QEvent.ToolTip:\n        self.setToolTip(\"patch sucessful\")\n    return QWidget.event(self, event)\n\nQPushButton.event = event\n\nqapplication = QApplication(sys.argv)\nloader = UiLoader()\nui = loader.load('test.ui')\nui.show()\n\nsys.exit(qapplication.exec_())\n\n\n```\nWhich seems to work great:\n\n![button_patch.png](https://bitbucket.org/repo/Rg5nLg/images/1284003404-button_patch.png)\n\nSo if I understand correctly, we should be able to have the patches applied in `qt.py` with something like (with added deprecation errors to force user code to use the qt5 method names):\n\n\n```\n#!python\n    def _patch(cls, qt5_method_name, qt4_method_name):\n        \"\"\"In Qt 4, alias the qt5 method names to point to the qt4\n        equivalents. Replace the qt4 method with one that raises an exception\n        pointing the user to use the qt5 method name\"\"\"\n\n        # Alias the new method name to point to the existing method\n        setattr(cls, qt5_method_name, cls.__dict__[qt4_method_name])\n\n        def deprecation_error(self, *args, **kwargs):\n            msg = (\"{}.{} has been renamed to \".format(cls.__name__, qt4_method_name) +\n                   \"{}.{} in qt5.\".format(cls.__name__, qt5_method_name) +\n                   \"qtutils requires you use the new method names even in qt4 \" +\n                   \" (they are aliased to point to the existing methods) so that code works \" +\n                   \"with both qt4 and qt5\")\n            raise NameError(msg)\n\n        # Accesing the existing method by name will raise an error:\n        setattr(cls, qt4_method_name, deprecation_error)\n\n    _patch(QHeaderView, \"setSectionsMovable\", \"setMovable\")\n    _patch(QHeaderView, \"setSectionsClickable\", \"setClickable\")\n    _patch(QHeaderView, \"setSectionResizeMode\", \"setResizeMode\")\n\n    _patch(QFileDialog, \"getOpenFileName\", \"getOpenFileNamesAndFilter\")\n```\n\nThis is the same as doing this:\n\n\n```\n#!python\n\n    QtGui.QHeaderView.setSectionsMovable = QtGui.QHeaderView.setMovable\n    QtGui.QHeaderView.setSectionsClickable = QtGui.QHeaderView.setClickable\n    QtGui.QHeaderView.setSectionResizeMode = QtGui.QHeaderView.setResizeMode\n\n    QtGui.QFileDialog.getOpenFileName = QtGui.QFileDialog.getOpenFileNamesAndFilter\n```\n\nI just made a function to add deprecation errors, which I think are a good idea so that users don't acidentally write qt4 code that won't work on qt5, when the idea is that we're exposinga qt5 API but making it work on qt4 as well.", "markup": "markdown", "html": "<p>You're right that it is ultimately up to application code to be compatible with the qt versions it wants to be compatible with, so they can always fall back on looking at QT_ENV to do different things. But it is inconsistent for widgets instantiated in code to be patched and ones coming from a .ui file to not be patched, so I'd like to get this working if possible (even if we're not using the patched methods in the labscript suite at the moment). </p>\n<p>Are you sure the patching function is to act on instances? <a data-is-external-link=\"true\" href=\"https://github.com/spyder-ide/qtpy/blob/94298feed928e21842c9982d1386e15c568b8232/qtpy/QtWidgets.py\" rel=\"nofollow\">Here</a> it looks like it is called once on the class.</p>\n<p>And patching the class like this appears to work for me. Here's a minimal example with a .ui file test.ui:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;ui</span> <span class=\"na\">version=</span><span class=\"s\">&quot;4.0&quot;</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;class&gt;</span>Form<span class=\"nt\">&lt;/class&gt;</span>\n <span class=\"nt\">&lt;widget</span> <span class=\"na\">class=</span><span class=\"s\">&quot;QWidget&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Form&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">&quot;geometry&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;rect&gt;</span>\n    <span class=\"nt\">&lt;x&gt;</span>0<span class=\"nt\">&lt;/x&gt;</span>\n    <span class=\"nt\">&lt;y&gt;</span>0<span class=\"nt\">&lt;/y&gt;</span>\n    <span class=\"nt\">&lt;width&gt;</span>400<span class=\"nt\">&lt;/width&gt;</span>\n    <span class=\"nt\">&lt;height&gt;</span>300<span class=\"nt\">&lt;/height&gt;</span>\n   <span class=\"nt\">&lt;/rect&gt;</span>\n  <span class=\"nt\">&lt;/property&gt;</span>\n  <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">&quot;windowTitle&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;string&gt;</span>Form<span class=\"nt\">&lt;/string&gt;</span>\n  <span class=\"nt\">&lt;/property&gt;</span>\n  <span class=\"nt\">&lt;layout</span> <span class=\"na\">class=</span><span class=\"s\">&quot;QVBoxLayout&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;verticalLayout&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;item&gt;</span>\n    <span class=\"nt\">&lt;widget</span> <span class=\"na\">class=</span><span class=\"s\">&quot;QPushButton&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;pushButton&quot;</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">&quot;text&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;string&gt;</span>Patched button<span class=\"nt\">&lt;/string&gt;</span>\n     <span class=\"nt\">&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;/widget&gt;</span>\n   <span class=\"nt\">&lt;/item&gt;</span>\n  <span class=\"nt\">&lt;/layout&gt;</span>\n <span class=\"nt\">&lt;/widget&gt;</span>\n <span class=\"nt\">&lt;resources/&gt;</span>\n <span class=\"nt\">&lt;connections/&gt;</span>\n<span class=\"nt\">&lt;/ui&gt;</span>\n</pre></div>\n\n\n<p>And python code using the existing version of qtutils (that is, without this pull request):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">PyQt4.QtGui</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PyQt4.QtCore</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PyQt4.Qt</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">qtutils</span> <span class=\"kn\">import</span> <span class=\"n\">UiLoader</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">QEvent</span><span class=\"o\">.</span><span class=\"n\">ToolTip</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setToolTip</span><span class=\"p\">(</span><span class=\"s2\">&quot;patch sucessful&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">QWidget</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">)</span>\n\n<span class=\"n\">QPushButton</span><span class=\"o\">.</span><span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">event</span>\n\n<span class=\"n\">qapplication</span> <span class=\"o\">=</span> <span class=\"n\">QApplication</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">UiLoader</span><span class=\"p\">()</span>\n<span class=\"n\">ui</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.ui&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">qapplication</span><span class=\"o\">.</span><span class=\"n\">exec_</span><span class=\"p\">())</span>\n</pre></div>\n\n\n<p>Which seems to work great:</p>\n<p><img alt=\"button_patch.png\" src=\"data/bitbucket.org/repo/Rg5nLg/images/1284003404-button_patch.png\" /></p>\n<p>So if I understand correctly, we should be able to have the patches applied in <code>qt.py</code> with something like (with added deprecation errors to force user code to use the qt5 method names):</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">_patch</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">qt5_method_name</span><span class=\"p\">,</span> <span class=\"n\">qt4_method_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;In Qt 4, alias the qt5 method names to point to the qt4</span>\n<span class=\"sd\">        equivalents. Replace the qt4 method with one that raises an exception</span>\n<span class=\"sd\">        pointing the user to use the qt5 method name&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># Alias the new method name to point to the existing method</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">qt5_method_name</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">qt4_method_name</span><span class=\"p\">])</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">deprecation_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;{}.{} has been renamed to &quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">qt4_method_name</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot;{}.{} in qt5.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">qt5_method_name</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot;qtutils requires you use the new method names even in qt4 &quot;</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot; (they are aliased to point to the existing methods) so that code works &quot;</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot;with both qt4 and qt5&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">NameError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Accesing the existing method by name will raise an error:</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">qt4_method_name</span><span class=\"p\">,</span> <span class=\"n\">deprecation_error</span><span class=\"p\">)</span>\n\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QHeaderView</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setSectionsMovable&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setMovable&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QHeaderView</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setSectionsClickable&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setClickable&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QHeaderView</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setSectionResizeMode&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setResizeMode&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QFileDialog</span><span class=\"p\">,</span> <span class=\"s2\">&quot;getOpenFileName&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;getOpenFileNamesAndFilter&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>This is the same as doing this:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setSectionsMovable</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setMovable</span>\n    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setSectionsClickable</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setClickable</span>\n    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setSectionResizeMode</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setResizeMode</span>\n\n    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QFileDialog</span><span class=\"o\">.</span><span class=\"n\">getOpenFileName</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QFileDialog</span><span class=\"o\">.</span><span class=\"n\">getOpenFileNamesAndFilter</span>\n</pre></div>\n\n\n<p>I just made a function to add deprecation errors, which I think are a good idea so that users don't acidentally write qt4 code that won't work on qt5, when the idea is that we're exposinga qt5 API but making it work on qt4 as well.</p>", "type": "rendered"}, "created_on": "2017-07-24T16:21:37.437556+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-24T16:42:34.718987+00:00", "type": "pullrequest_comment", "id": 41367694}