{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304829.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304829"}}, "parent": {"id": 41304590, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304590.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304590"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Ah yes, fair enough. It looks like we aren't using it anywhere, but I can easily see that you don't want to promote *all* widgets of a certain type, which all our uses currently do. They can get away with it because our ui files generally only have one TreeView in them or whatever, but obviously as soon as you add a second one you need to specify which is to be promoted.\n\nI also want to hang onto our own UI loader stuff because I've noticed that that's one place BLACS spends a lot of time during startup loading the same UI file for each tab, and so I've thought about adding a cache as a performance optimisation.\n\nI might experiment to see if the qtpy abstraction layer makes sense. I admit I have a general suspicion of projects in the same part of the ecosystem as IPython/jupyter, because they tend to do magic things with the interpreter that sometimes bite us. But a cursory look over qtpy's code looks like it's not doing anything too crazy.\n\nIf it does make sense to use it, the current work @PhyNerd is doing is still mostly useful - we would just replace the contents of his new file `qt.py` with some import lines to qtpy and everything else will be importing that via qtutils.", "markup": "markdown", "html": "<p>Ah yes, fair enough. It looks like we aren't using it anywhere, but I can easily see that you don't want to promote <em>all</em> widgets of a certain type, which all our uses currently do. They can get away with it because our ui files generally only have one TreeView in them or whatever, but obviously as soon as you add a second one you need to specify which is to be promoted.</p>\n<p>I also want to hang onto our own UI loader stuff because I've noticed that that's one place BLACS spends a lot of time during startup loading the same UI file for each tab, and so I've thought about adding a cache as a performance optimisation.</p>\n<p>I might experiment to see if the qtpy abstraction layer makes sense. I admit I have a general suspicion of projects in the same part of the ecosystem as IPython/jupyter, because they tend to do magic things with the interpreter that sometimes bite us. But a cursory look over qtpy's code looks like it's not doing anything too crazy.</p>\n<p>If it does make sense to use it, the current work @PhyNerd is doing is still mostly useful - we would just replace the contents of his new file <code>qt.py</code> with some import lines to qtpy and everything else will be importing that via qtutils.</p>", "type": "rendered"}, "created_on": "2017-07-23T23:55:08.137979+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T23:55:08.147110+00:00", "type": "pullrequest_comment", "id": 41304829}