{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395825.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395825"}}, "parent": {"id": 41395146, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395146.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395146"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "It will only fail if the icon libraries have not already been built. The idea is that someone with time on their hands goes and builds all three (here on ubuntu when running with system python rather than anaconda you can have all three libraries installed simultaneously) when they type `python setup.py sdist upload` to upload to PyPI, and then all three will be included in what people get when they do a `pip install`. If the person doing the release is on a setup where they can't have all three installed simultaneously they can do a `python setup.py NO_PYQT4` with pyqt5 present, then a `python setup.py NO_PYQT5` wiht pyqt4 present. In both cases setup.py will complain that they haven't provided a valid command, but the icon resource files will be generated anyway. Then they can type `python setup.py sdist upload` and the built resources will be uploaded regardless of what qt libraries are present at the time. So all the inconvenience is lumped onto the uploader, but pip installing will be fine so long as the uploader knows what they should be doing (there's a comment in setup.py explaining some of this)\n\nEdit: and if you want to install from source rather than pip and you don't want to have to build in multiple stages whilst installing and uninstalling other packages, then you have to add the 'NO_PYSIDE' etc arguments to setup.py to say which ones you're happy to exclude from the build.", "markup": "markdown", "html": "<p>It will only fail if the icon libraries have not already been built. The idea is that someone with time on their hands goes and builds all three (here on ubuntu when running with system python rather than anaconda you can have all three libraries installed simultaneously) when they type <code>python setup.py sdist upload</code> to upload to PyPI, and then all three will be included in what people get when they do a <code>pip install</code>. If the person doing the release is on a setup where they can't have all three installed simultaneously they can do a <code>python setup.py NO_PYQT4</code> with pyqt5 present, then a <code>python setup.py NO_PYQT5</code> wiht pyqt4 present. In both cases setup.py will complain that they haven't provided a valid command, but the icon resource files will be generated anyway. Then they can type <code>python setup.py sdist upload</code> and the built resources will be uploaded regardless of what qt libraries are present at the time. So all the inconvenience is lumped onto the uploader, but pip installing will be fine so long as the uploader knows what they should be doing (there's a comment in setup.py explaining some of this)</p>\n<p>Edit: and if you want to install from source rather than pip and you don't want to have to build in multiple stages whilst installing and uninstalling other packages, then you have to add the 'NO_PYSIDE' etc arguments to setup.py to say which ones you're happy to exclude from the build.</p>", "type": "rendered"}, "created_on": "2017-07-25T01:06:46.813184+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T01:09:52.074675+00:00", "type": "pullrequest_comment", "id": 41395825}