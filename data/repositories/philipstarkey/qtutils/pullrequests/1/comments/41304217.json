{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304217.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304217"}}, "parent": {"id": 41301873, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301873.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301873"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "This project:\n\nhttps://github.com/spyder-ide/qtpy/blob/master/qtpy/_patch/qheaderview.py\n\nWhich has similar aims - it is a Python Qt library abstraction layer - patches the class by adding methods to the existing class rather than subclassing it. Is that an option? Does that make the UI loader get the right class?\n\nI didn't realise earlier that you were replacing the class in the PyQt4 module with your subclass, I actually would have expected the UI loader to get your subclass.\n\nAlso, obviously this project qtpy could be useful. My instinct is that if our needs remain pretty simple we can stick with our own 1-file abstraction layer, but that if things get more complex we might want to use qtpy ourselves rather than maintain our own abstraction layer. It also has UI loader stuff which you might want to look at to see how they handle the problem you've observed.\n\n@philipstarkey, maybe you might want to look at qtpy and see if you think it makes any of qtutils obsolete? Obviously there's a lot it doesn't, but maybe the abstraction layer and the UI loader stuff?\n\nSince Spyder uses this qtpy package it looks like it should be around for a while.", "markup": "markdown", "html": "<p>This project:</p>\n<p><a href=\"https://github.com/spyder-ide/qtpy/blob/master/qtpy/_patch/qheaderview.py\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/spyder-ide/qtpy/blob/master/qtpy/_patch/qheaderview.py</a></p>\n<p>Which has similar aims - it is a Python Qt library abstraction layer - patches the class by adding methods to the existing class rather than subclassing it. Is that an option? Does that make the UI loader get the right class?</p>\n<p>I didn't realise earlier that you were replacing the class in the PyQt4 module with your subclass, I actually would have expected the UI loader to get your subclass.</p>\n<p>Also, obviously this project qtpy could be useful. My instinct is that if our needs remain pretty simple we can stick with our own 1-file abstraction layer, but that if things get more complex we might want to use qtpy ourselves rather than maintain our own abstraction layer. It also has UI loader stuff which you might want to look at to see how they handle the problem you've observed.</p>\n<p>@philipstarkey, maybe you might want to look at qtpy and see if you think it makes any of qtutils obsolete? Obviously there's a lot it doesn't, but maybe the abstraction layer and the UI loader stuff?</p>\n<p>Since Spyder uses this qtpy package it looks like it should be around for a while.</p>", "type": "rendered"}, "created_on": "2017-07-23T22:57:40.152177+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T22:57:40.160720+00:00", "type": "pullrequest_comment", "id": 41304217}