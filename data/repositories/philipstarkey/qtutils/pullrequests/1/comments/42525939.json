{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/42525939.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-42525939"}}, "parent": {"id": 42523045, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/42523045.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-42523045"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "There is not much point trying to be comprehensive. We're not using QStyleOptionViewItem but it was the only one in qtpy so I thought there was a small chance it was the only remaining rename required. But this is very much not true. I just wrote a little script to output the list of object names and methods in PyQt4 and PyQt5 and compare them to see which ones are present in PyQt4 and absent in PyQt5 (indicating deletion or renaming). I had the script only list methods if the object itself was present in both versions under the same name. The resulting list of deletions/renames is [1200 items long](https://pastebin.com/b4ZPGh4y) and I have never heard of most of them.\n\nEven if we tried to wrap more things, it likely gets to a point where you have to acknowledge that the two libraries are actually different, and that if automated backward compatible wrapping were possible, there would not have been a need for a major version bump in qt. So the whack-a-mole approach is I think the only realistic one.", "markup": "markdown", "html": "<p>There is not much point trying to be comprehensive. We're not using QStyleOptionViewItem but it was the only one in qtpy so I thought there was a small chance it was the only remaining rename required. But this is very much not true. I just wrote a little script to output the list of object names and methods in PyQt4 and PyQt5 and compare them to see which ones are present in PyQt4 and absent in PyQt5 (indicating deletion or renaming). I had the script only list methods if the object itself was present in both versions under the same name. The resulting list of deletions/renames is <a data-is-external-link=\"true\" href=\"https://pastebin.com/b4ZPGh4y\" rel=\"nofollow\">1200 items long</a> and I have never heard of most of them.</p>\n<p>Even if we tried to wrap more things, it likely gets to a point where you have to acknowledge that the two libraries are actually different, and that if automated backward compatible wrapping were possible, there would not have been a need for a major version bump in qt. So the whack-a-mole approach is I think the only realistic one.</p>", "type": "rendered"}, "created_on": "2017-08-09T23:10:13.540115+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-09T23:10:13.542780+00:00", "type": "pullrequest_comment", "id": 42525939}