{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/42534622.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-42534622"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "this pull request currently has the following undesired behaviour:\n\n\n```\n#!python\n\n>>> import PyQt4\n>>> import qtutils.qt\n>>> import sip\n>>> print(sip.getapi('QString'))\n1\n```\n\nWhich leaves the PyQt APIs on version 1.\n\nYou can force qtutils to use PyQt4 by importing PyQt4 first (*just* PyQt4 and none of its submodules so as to avoid setting the API version). That's great, otherwise there would be no way to compel qtutils to use PyQt4. \n\nBut unfortunately the API check sees that the API version has not been set to anything, and does not count that as an error. It shouldn't be an error, but it also shouldn't stop qtutils.qt from setting the API still. Also, the error message could be a bit more informative so as to say that it's not PyQt4 you can't import, it's the submodules. \n\nHere's a patch to fix these:\n\n\n```\n#!diff\n\ndiff -r 922abce46329 qtutils/qt.py\n--- a/qtutils/qt.py\tWed Aug 09 23:54:58 2017 +0200\n+++ b/qtutils/qt.py\tThu Aug 10 00:18:28 2017 -0400\n@@ -18,54 +18,61 @@\n import sys\n \n PYSIDE = 'PySide'\n PYQT4 = 'PyQt4'\n PYQT5 = 'PyQt5'\n QT_ENV = None\n \n \n-def set_pyqt4_API2():\n+def set_pyqt4_api():\n     import sip\n     # This must be done before importing PyQt4:\n     API_NAMES = [\"QDate\", \"QDateTime\", \"QString\", \"QTextStream\", \"QTime\", \"QUrl\", \"QVariant\"]\n     API_VERSION = 2\n     for name in API_NAMES:\n         try:\n             sip.setapi(name, API_VERSION)\n         except ValueError:\n             pass\n \n \n def check_pyqt4_api():\n-    \"\"\"If PyQt4 was already imported before we got a chance to set API version 2, ensure the API\n-    versions were already set to version 2. Otherwise confusing errors may occur later - better to catch this now\"\"\"\n+    \"\"\"If PyQt4 was already imported before we got a chance to set API version\n+    2, ensure the API versions are either not set, or set to version 2.\n+    Otherwise confusing errors may occur later - better to catch this now\"\"\"\n     import sip\n     API_NAMES = [\"QDate\", \"QDateTime\", \"QString\", \"QTextStream\", \"QTime\", \"QUrl\", \"QVariant\"]\n     API_VERSION = 2\n     for name in API_NAMES:\n         try:\n             if sip.getapi(name) != API_VERSION:\n-                raise RuntimeError(\"qtutils only compatible with version 2 of the  PYQt4 API. Either set the API to version 2 before importing PyQt4, or import qtutils first, which will set it for you\")\n+                msg = (\"qtutils is only compatible with version 2 of the  PyQt4 API.\" +\n+                       \"Whilst you can import PyQt4 prior to importing qtutils (in order to tell qtutils \" +\n+                       \"to use PyQt4), either set the API version to 2 yourself, or import qtutils \" +\n+                       \"(which will set it for you) prior to importing QtGui or QtCore.\")\n+                raise RuntimeError(msg)\n         except ValueError:\n+            # API version not set yet.\n             pass\n \n \n libs = [PYQT5, PYQT4, PYSIDE]\n for lib in libs:\n     if lib in sys.modules:\n         QT_ENV = lib\n         if lib == PYQT4:\n             check_pyqt4_api()\n+            set_pyqt4_api()\n         break\n else:\n     for lib in libs:\n         if lib == PYQT4:\n             # Have to set pyqt API v2 before importing PyQt4:\n-            set_pyqt4_API2()\n+            set_pyqt4_api()\n         try:\n             __import__(lib)\n             QT_ENV = lib\n             break\n         except ImportError:\n             pass\n \n if QT_ENV is None:\n\n```\nResulting in:\n\n```\n#!python\n\n>>> import PyQt4\n>>> import qtutils.qt\n>>> import sip\n>>> print(sip.getapi('QString'))\n2\n```", "markup": "markdown", "html": "<p>this pull request currently has the following undesired behaviour:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">PyQt4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">qtutils.qt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">sip</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">sip</span><span class=\"o\">.</span><span class=\"n\">getapi</span><span class=\"p\">(</span><span class=\"s1\">&#39;QString&#39;</span><span class=\"p\">))</span>\n<span class=\"mi\">1</span>\n</pre></div>\n\n\n<p>Which leaves the PyQt APIs on version 1.</p>\n<p>You can force qtutils to use PyQt4 by importing PyQt4 first (<em>just</em> PyQt4 and none of its submodules so as to avoid setting the API version). That's great, otherwise there would be no way to compel qtutils to use PyQt4. </p>\n<p>But unfortunately the API check sees that the API version has not been set to anything, and does not count that as an error. It shouldn't be an error, but it also shouldn't stop qtutils.qt from setting the API still. Also, the error message could be a bit more informative so as to say that it's not PyQt4 you can't import, it's the submodules. </p>\n<p>Here's a patch to fix these:</p>\n<div class=\"codehilite language-diff\"><pre><span></span><span class=\"gh\">diff -r 922abce46329 qtutils/qt.py</span>\n<span class=\"gd\">--- a/qtutils/qt.py Wed Aug 09 23:54:58 2017 +0200</span>\n<span class=\"gi\">+++ b/qtutils/qt.py Thu Aug 10 00:18:28 2017 -0400</span>\n<span class=\"gu\">@@ -18,54 +18,61 @@</span>\n import sys\n\n PYSIDE = &#39;PySide&#39;\n PYQT4 = &#39;PyQt4&#39;\n PYQT5 = &#39;PyQt5&#39;\n QT_ENV = None\n\n\n<span class=\"gd\">-def set_pyqt4_API2():</span>\n<span class=\"gi\">+def set_pyqt4_api():</span>\n     import sip\n     # This must be done before importing PyQt4:\n     API_NAMES = [&quot;QDate&quot;, &quot;QDateTime&quot;, &quot;QString&quot;, &quot;QTextStream&quot;, &quot;QTime&quot;, &quot;QUrl&quot;, &quot;QVariant&quot;]\n     API_VERSION = 2\n     for name in API_NAMES:\n         try:\n             sip.setapi(name, API_VERSION)\n         except ValueError:\n             pass\n\n\n def check_pyqt4_api():\n<span class=\"gd\">-    &quot;&quot;&quot;If PyQt4 was already imported before we got a chance to set API version 2, ensure the API</span>\n<span class=\"gd\">-    versions were already set to version 2. Otherwise confusing errors may occur later - better to catch this now&quot;&quot;&quot;</span>\n<span class=\"gi\">+    &quot;&quot;&quot;If PyQt4 was already imported before we got a chance to set API version</span>\n<span class=\"gi\">+    2, ensure the API versions are either not set, or set to version 2.</span>\n<span class=\"gi\">+    Otherwise confusing errors may occur later - better to catch this now&quot;&quot;&quot;</span>\n     import sip\n     API_NAMES = [&quot;QDate&quot;, &quot;QDateTime&quot;, &quot;QString&quot;, &quot;QTextStream&quot;, &quot;QTime&quot;, &quot;QUrl&quot;, &quot;QVariant&quot;]\n     API_VERSION = 2\n     for name in API_NAMES:\n         try:\n             if sip.getapi(name) != API_VERSION:\n<span class=\"gd\">-                raise RuntimeError(&quot;qtutils only compatible with version 2 of the  PYQt4 API. Either set the API to version 2 before importing PyQt4, or import qtutils first, which will set it for you&quot;)</span>\n<span class=\"gi\">+                msg = (&quot;qtutils is only compatible with version 2 of the  PyQt4 API.&quot; +</span>\n<span class=\"gi\">+                       &quot;Whilst you can import PyQt4 prior to importing qtutils (in order to tell qtutils &quot; +</span>\n<span class=\"gi\">+                       &quot;to use PyQt4), either set the API version to 2 yourself, or import qtutils &quot; +</span>\n<span class=\"gi\">+                       &quot;(which will set it for you) prior to importing QtGui or QtCore.&quot;)</span>\n<span class=\"gi\">+                raise RuntimeError(msg)</span>\n         except ValueError:\n<span class=\"gi\">+            # API version not set yet.</span>\n             pass\n\n\n libs = [PYQT5, PYQT4, PYSIDE]\n for lib in libs:\n     if lib in sys.modules:\n         QT_ENV = lib\n         if lib == PYQT4:\n             check_pyqt4_api()\n<span class=\"gi\">+            set_pyqt4_api()</span>\n         break\n else:\n     for lib in libs:\n         if lib == PYQT4:\n             # Have to set pyqt API v2 before importing PyQt4:\n<span class=\"gd\">-            set_pyqt4_API2()</span>\n<span class=\"gi\">+            set_pyqt4_api()</span>\n         try:\n             __import__(lib)\n             QT_ENV = lib\n             break\n         except ImportError:\n             pass\n\n if QT_ENV is None:\n</pre></div>\n\n\n<p>Resulting in:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">PyQt4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">qtutils.qt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">sip</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">sip</span><span class=\"o\">.</span><span class=\"n\">getapi</span><span class=\"p\">(</span><span class=\"s1\">&#39;QString&#39;</span><span class=\"p\">))</span>\n<span class=\"mi\">2</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-10T04:21:14.665189+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-08-10T04:21:14.668106+00:00", "type": "pullrequest_comment", "id": 42534622}