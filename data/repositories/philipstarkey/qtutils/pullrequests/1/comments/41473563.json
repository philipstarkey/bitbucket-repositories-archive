{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41473563.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41473563"}}, "parent": {"id": 41471813, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41471813.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41471813"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "The \"building\" for this package specifically is platform-independent. It produces .py files that work on all platforms, so no need to have multiple people build it on different platforms. If we upload to PyPI with `python setup.py sdist upload`, then \"sdist\" means \"source distribution\", telling distutils and PyPI that the same upload is valid for all platforms (pip install will give the same files to everyone). If there were platform-specific binaries to be built (as is the case for some other packages of ours) then `python setup.py bdist upload` (bdist = binary distribution) uploads a platform-specific build to PyPI, and so needs to be done on all platforms.\n\nUpdating it to exactly 2.0.0 I think is the right approach. I don't think it matters much when that happens so long as it is prior to PyPI release. If you changed it to 2.0.0 in the pull request I think that would be fine, the version checking would work during your testing then, but we won't apply the 2.0 tag and do the 2.0 PyPI release until after merging obviously.\n\nThe Python 3 compatibility will hopefully be backward compatible and so would only be a point release to 2.1 in accordance with [semver](http://semver.org/).", "markup": "markdown", "html": "<p>The \"building\" for this package specifically is platform-independent. It produces .py files that work on all platforms, so no need to have multiple people build it on different platforms. If we upload to PyPI with <code>python setup.py sdist upload</code>, then \"sdist\" means \"source distribution\", telling distutils and PyPI that the same upload is valid for all platforms (pip install will give the same files to everyone). If there were platform-specific binaries to be built (as is the case for some other packages of ours) then <code>python setup.py bdist upload</code> (bdist = binary distribution) uploads a platform-specific build to PyPI, and so needs to be done on all platforms.</p>\n<p>Updating it to exactly 2.0.0 I think is the right approach. I don't think it matters much when that happens so long as it is prior to PyPI release. If you changed it to 2.0.0 in the pull request I think that would be fine, the version checking would work during your testing then, but we won't apply the 2.0 tag and do the 2.0 PyPI release until after merging obviously.</p>\n<p>The Python 3 compatibility will hopefully be backward compatible and so would only be a point release to 2.1 in accordance with <a data-is-external-link=\"true\" href=\"http://semver.org/\" rel=\"nofollow\">semver</a>.</p>", "type": "rendered"}, "created_on": "2017-07-25T18:29:51.776388+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T18:29:51.778898+00:00", "type": "pullrequest_comment", "id": 41473563}