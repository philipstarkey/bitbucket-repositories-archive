{"pagelen": 50, "values": [{"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cc9462580077", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/cc9462580077"}, "html": {"href": "#!/PhyNerd/qtutils/commits/cc9462580077"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-26T06:40:05.931670+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41500700.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41500700"}}, "parent": {"id": 41500645, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41500645.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41500645"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "@PhyNerd Could you please add my new account (this one that is now labelled as \"repo owner\") as a reviewer of this pull request. Thanks!", "markup": "markdown", "html": "<p>@PhyNerd Could you please add my new account (this one that is now labelled as \"repo owner\") as a reviewer of this pull request. Thanks!</p>", "type": "rendered"}, "created_on": "2017-07-26T05:36:29.315625+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2017-07-26T05:36:29.325423+00:00", "type": "pullrequest_comment", "id": 41500700}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41500645.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41500645"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "@PhyNerd @cbillington FYI I've just migrated the entire qtutils repository to a new bitbucket profile (not the current lack of a profile picture). However I've done it in such a way that you shouldn't be able to tell. Bitbucket transferred everything correctly as far as I can tell (what you see right now **is** the repo on the new profile) and I renamed my old profile so that my new profile could take over the old name (bitbucket.org/philipstarkey) such that no URLs should have changed. \n\nIf you notice anything odd because of this migration, please let me know!\nI'll continue to use my [original bitbucket account](https://bitbucket.org/pstarkey/) (associated and now controlled by Monash University) for labscript_suite and university related projects but my new personal account for everything else (including qtutils)", "markup": "markdown", "html": "<p>@PhyNerd @cbillington FYI I've just migrated the entire qtutils repository to a new bitbucket profile (not the current lack of a profile picture). However I've done it in such a way that you shouldn't be able to tell. Bitbucket transferred everything correctly as far as I can tell (what you see right now <strong>is</strong> the repo on the new profile) and I renamed my old profile so that my new profile could take over the old name (<a href=\"http://bitbucket.org/philipstarkey\" rel=\"nofollow\" class=\"ap-connect-link\">bitbucket.org/philipstarkey</a>) such that no URLs should have changed. </p>\n<p>If you notice anything odd because of this migration, please let me know!\nI'll continue to use my <a data-is-external-link=\"true\" href=\"https://bitbucket.org/pstarkey/\" rel=\"nofollow\">original bitbucket account</a> (associated and now controlled by Monash University) for labscript_suite and university related projects but my new personal account for everything else (including qtutils)</p>", "type": "rendered"}, "created_on": "2017-07-26T05:34:33.234386+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{0147401a-13ed-4e39-a0d0-63108c18738b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D"}, "html": {"href": "https://bitbucket.org/%7B0147401a-13ed-4e39-a0d0-63108c18738b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fa0698c306b3470c00717c146b5296e9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "philipstarkey", "type": "user", "account_id": "557058:2f99420c-1dbd-4837-952c-82c421b8fbdd"}, "updated_on": "2017-07-26T05:34:33.262842+00:00", "type": "pullrequest_comment", "id": 41500645}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41473563.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41473563"}}, "parent": {"id": 41471813, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41471813.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41471813"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "The \"building\" for this package specifically is platform-independent. It produces .py files that work on all platforms, so no need to have multiple people build it on different platforms. If we upload to PyPI with `python setup.py sdist upload`, then \"sdist\" means \"source distribution\", telling distutils and PyPI that the same upload is valid for all platforms (pip install will give the same files to everyone). If there were platform-specific binaries to be built (as is the case for some other packages of ours) then `python setup.py bdist upload` (bdist = binary distribution) uploads a platform-specific build to PyPI, and so needs to be done on all platforms.\n\nUpdating it to exactly 2.0.0 I think is the right approach. I don't think it matters much when that happens so long as it is prior to PyPI release. If you changed it to 2.0.0 in the pull request I think that would be fine, the version checking would work during your testing then, but we won't apply the 2.0 tag and do the 2.0 PyPI release until after merging obviously.\n\nThe Python 3 compatibility will hopefully be backward compatible and so would only be a point release to 2.1 in accordance with [semver](http://semver.org/).", "markup": "markdown", "html": "<p>The \"building\" for this package specifically is platform-independent. It produces .py files that work on all platforms, so no need to have multiple people build it on different platforms. If we upload to PyPI with <code>python setup.py sdist upload</code>, then \"sdist\" means \"source distribution\", telling distutils and PyPI that the same upload is valid for all platforms (pip install will give the same files to everyone). If there were platform-specific binaries to be built (as is the case for some other packages of ours) then <code>python setup.py bdist upload</code> (bdist = binary distribution) uploads a platform-specific build to PyPI, and so needs to be done on all platforms.</p>\n<p>Updating it to exactly 2.0.0 I think is the right approach. I don't think it matters much when that happens so long as it is prior to PyPI release. If you changed it to 2.0.0 in the pull request I think that would be fine, the version checking would work during your testing then, but we won't apply the 2.0 tag and do the 2.0 PyPI release until after merging obviously.</p>\n<p>The Python 3 compatibility will hopefully be backward compatible and so would only be a point release to 2.1 in accordance with <a data-is-external-link=\"true\" href=\"http://semver.org/\" rel=\"nofollow\">semver</a>.</p>", "type": "rendered"}, "created_on": "2017-07-25T18:29:51.776388+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T18:29:51.778898+00:00", "type": "pullrequest_comment", "id": 41473563}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41471813.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41471813"}}, "parent": {"id": 41398005, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41398005.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41398005"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Cant help you guys much with this but I could provide a builded(on macOS) pyqt4, pyqt5 and pyside package. \n\nI have no clue how pip install and getting packages in there works so that's for you todo.\n\nBut before upload we should raise the version number maybe to something greater then 2? As this would break labscript at the moment with the deprecation warnings if someone were to update.(like me earlier today xD)", "markup": "markdown", "html": "<p>Cant help you guys much with this but I could provide a builded(on macOS) pyqt4, pyqt5 and pyside package. </p>\n<p>I have no clue how pip install and getting packages in there works so that's for you todo.</p>\n<p>But before upload we should raise the version number maybe to something greater then 2? As this would break labscript at the moment with the deprecation warnings if someone were to update.(like me earlier today xD)</p>", "type": "rendered"}, "created_on": "2017-07-25T18:04:00.779000+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-25T18:04:56.277002+00:00", "type": "pullrequest_comment", "id": 41471813}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41398005.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41398005"}}, "parent": {"id": 41397022, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41397022.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41397022"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "I meant building packages in general. I think the way it ended up being bundled was different and we ran into errors installing cross-platform from PyPi or upgrading or something like that. Wasn't a qtutils specific issue!", "markup": "markdown", "html": "<p>I meant building packages in general. I think the way it ended up being bundled was different and we ran into errors installing cross-platform from PyPi or upgrading or something like that. Wasn't a qtutils specific issue!</p>", "type": "rendered"}, "created_on": "2017-07-25T02:21:58.286240+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-25T02:21:58.288227+00:00", "type": "pullrequest_comment", "id": 41398005}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41397022.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41397022"}}, "parent": {"id": 41396347, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41396347.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41396347"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "It should work on windows! It doesn't need a c compiler or anything. The only difference should be how the building code finds the pyrcc5 and pyrcc4 executables. And actually it's quite possible that I originally made the code on Windows, since I was on a windows machine at NIST back then. So if something is not working there it shouldn't be too hard to fix.", "markup": "markdown", "html": "<p>It should work on windows! It doesn't need a c compiler or anything. The only difference should be how the building code finds the pyrcc5 and pyrcc4 executables. And actually it's quite possible that I originally made the code on Windows, since I was on a windows machine at NIST back then. So if something is not working there it shouldn't be too hard to fix.</p>", "type": "rendered"}, "created_on": "2017-07-25T01:50:32.061831+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T01:50:32.065254+00:00", "type": "pullrequest_comment", "id": 41397022}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41396347.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41396347"}}, "parent": {"id": 41395855, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395855.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395855"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "I'm pretty sure I do as well...but I think there are differences between windows and linux build processes and the format of the build was broken or something like that when I did it from windows (so now you do it all the time). I should probably get the [Linux Subsystem for Windows](https://msdn.microsoft.com/en-au/commandline/wsl/install_guide) running on my PC so I don't have these problems anymore!", "markup": "markdown", "html": "<p>I'm pretty sure I do as well...but I think there are differences between windows and linux build processes and the format of the build was broken or something like that when I did it from windows (so now you do it all the time). I should probably get the <a data-is-external-link=\"true\" href=\"https://msdn.microsoft.com/en-au/commandline/wsl/install_guide\" rel=\"nofollow\">Linux Subsystem for Windows</a> running on my PC so I don't have these problems anymore!</p>", "type": "rendered"}, "created_on": "2017-07-25T01:26:47.079954+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-25T01:26:47.081771+00:00", "type": "pullrequest_comment", "id": 41396347}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395825.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395825"}}, "parent": {"id": 41395146, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395146.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395146"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "It will only fail if the icon libraries have not already been built. The idea is that someone with time on their hands goes and builds all three (here on ubuntu when running with system python rather than anaconda you can have all three libraries installed simultaneously) when they type `python setup.py sdist upload` to upload to PyPI, and then all three will be included in what people get when they do a `pip install`. If the person doing the release is on a setup where they can't have all three installed simultaneously they can do a `python setup.py NO_PYQT4` with pyqt5 present, then a `python setup.py NO_PYQT5` wiht pyqt4 present. In both cases setup.py will complain that they haven't provided a valid command, but the icon resource files will be generated anyway. Then they can type `python setup.py sdist upload` and the built resources will be uploaded regardless of what qt libraries are present at the time. So all the inconvenience is lumped onto the uploader, but pip installing will be fine so long as the uploader knows what they should be doing (there's a comment in setup.py explaining some of this)\n\nEdit: and if you want to install from source rather than pip and you don't want to have to build in multiple stages whilst installing and uninstalling other packages, then you have to add the 'NO_PYSIDE' etc arguments to setup.py to say which ones you're happy to exclude from the build.", "markup": "markdown", "html": "<p>It will only fail if the icon libraries have not already been built. The idea is that someone with time on their hands goes and builds all three (here on ubuntu when running with system python rather than anaconda you can have all three libraries installed simultaneously) when they type <code>python setup.py sdist upload</code> to upload to PyPI, and then all three will be included in what people get when they do a <code>pip install</code>. If the person doing the release is on a setup where they can't have all three installed simultaneously they can do a <code>python setup.py NO_PYQT4</code> with pyqt5 present, then a <code>python setup.py NO_PYQT5</code> wiht pyqt4 present. In both cases setup.py will complain that they haven't provided a valid command, but the icon resource files will be generated anyway. Then they can type <code>python setup.py sdist upload</code> and the built resources will be uploaded regardless of what qt libraries are present at the time. So all the inconvenience is lumped onto the uploader, but pip installing will be fine so long as the uploader knows what they should be doing (there's a comment in setup.py explaining some of this)</p>\n<p>Edit: and if you want to install from source rather than pip and you don't want to have to build in multiple stages whilst installing and uninstalling other packages, then you have to add the 'NO_PYSIDE' etc arguments to setup.py to say which ones you're happy to exclude from the build.</p>", "type": "rendered"}, "created_on": "2017-07-25T01:06:46.813184+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T01:09:52.074675+00:00", "type": "pullrequest_comment", "id": 41395825}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395855.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395855"}}, "parent": {"id": 41395825, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395825.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395825"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Also I don't even know who has permissions to upload to the PyPI package, it might just be me anyway!", "markup": "markdown", "html": "<p>Also I don't even know who has permissions to upload to the PyPI package, it might just be me anyway!</p>", "type": "rendered"}, "created_on": "2017-07-25T01:08:01.697664+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-25T01:08:01.699701+00:00", "type": "pullrequest_comment", "id": 41395855}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41395146.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41395146"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Am I correct that by default this will only build if PySide, PyQt4 and PyQt5 are available? Surely this means that `pip install qtutils` fails if one of them is missing? I'm assuming this also was a problem previously but we just happened to be OK because typically use it on systems that had both PyQt4 and PySide installed?\n\nIf I'm right, I don't think anaconda allows both PyQt4 and PyQt5 to be installed together (at least not easily) so we should fix this somehow!", "markup": "markdown", "html": "<p>Am I correct that by default this will only build if PySide, PyQt4 and PyQt5 are available? Surely this means that <code>pip install qtutils</code> fails if one of them is missing? I'm assuming this also was a problem previously but we just happened to be OK because typically use it on systems that had both PyQt4 and PySide installed?</p>\n<p>If I'm right, I don't think anaconda allows both PyQt4 and PyQt5 to be installed together (at least not easily) so we should fix this somehow!</p>", "type": "rendered"}, "created_on": "2017-07-25T00:43:52.763915+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-25T00:43:52.765566+00:00", "type": "pullrequest_comment", "id": 41395146}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41375977.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41375977"}}, "parent": {"id": 41375200, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41375200.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41375200"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Oh didn't think of this (and didn't know this). Added the change.\n\nSure testing is always a good idea. My testing was mostly running the demos and porting labscript I didn't really encounter problems till now. But I'm fairly confident that there should be no more huge or breaking bugs.\n\nNo problem someone had to do it and I had some sparetime ^^. I also learned a lot about Qt and the differences between Qt4 and Qt5 on the way. I actually have to thank you for your patience and for taking time to help make the code better.\n\n", "markup": "markdown", "html": "<p>Oh didn't think of this (and didn't know this). Added the change.</p>\n<p>Sure testing is always a good idea. My testing was mostly running the demos and porting labscript I didn't really encounter problems till now. But I'm fairly confident that there should be no more huge or breaking bugs.</p>\n<p>No problem someone had to do it and I had some sparetime ^^. I also learned a lot about Qt and the differences between Qt4 and Qt5 on the way. I actually have to thank you for your patience and for taking time to help make the code better.</p>", "type": "rendered"}, "created_on": "2017-07-24T18:13:06.283827+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-24T18:13:06.389986+00:00", "type": "pullrequest_comment", "id": 41375977}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cc9462580077", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/cc9462580077"}, "html": {"href": "#!/PhyNerd/qtutils/commits/cc9462580077"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-24T18:05:48.174408+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41375200.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41375200"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "One remaining issue:  in `qt.py`, the`sip` import at the top of the file should be removed, since if the user only has PySide, they might not have sip (since it's only required by pyqt 4 and 5). an import to sip should be added in `check_pyqt4_api()` since it needs it.\n\nI'll test a little bit before approving but I'm happy that things are complete with this pull request, thanks again for the changes.", "markup": "markdown", "html": "<p>One remaining issue:  in <code>qt.py</code>, the<code>sip</code> import at the top of the file should be removed, since if the user only has PySide, they might not have sip (since it's only required by pyqt 4 and 5). an import to sip should be added in <code>check_pyqt4_api()</code> since it needs it.</p>\n<p>I'll test a little bit before approving but I'm happy that things are complete with this pull request, thanks again for the changes.</p>", "type": "rendered"}, "created_on": "2017-07-24T18:01:43.691249+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-24T18:02:02.068595+00:00", "type": "pullrequest_comment", "id": 41375200}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41370896.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41370896"}}, "parent": {"id": 41369145, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41369145.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41369145"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "For QFileDialog there should be no deprecation warning as the function technically exists it just does different things\n\nI'll also give your example another try. But I'm not certain it will still work if we do the patching in the wrapper(which I tried this morning)\n\nUpdate: Ok still works I'll update my code\n\nUpdated update: I implemented the changes and the deprecation should be there for QFileDialoge to I was wrong sorry for the confusion will readd it\n\nHopfully last update: Added some more QFileDialog functions that were changed and readded the deprecation message", "markup": "markdown", "html": "<p>For QFileDialog there should be no deprecation warning as the function technically exists it just does different things</p>\n<p>I'll also give your example another try. But I'm not certain it will still work if we do the patching in the wrapper(which I tried this morning)</p>\n<p>Update: Ok still works I'll update my code</p>\n<p>Updated update: I implemented the changes and the deprecation should be there for QFileDialoge to I was wrong sorry for the confusion will readd it</p>\n<p>Hopfully last update: Added some more QFileDialog functions that were changed and readded the deprecation message</p>", "type": "rendered"}, "created_on": "2017-07-24T16:59:58.709570+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-24T17:42:17.721440+00:00", "type": "pullrequest_comment", "id": 41370896}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "90f81a7f937e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/90f81a7f937e"}, "html": {"href": "#!/PhyNerd/qtutils/commits/90f81a7f937e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-24T17:40:38.640919+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "56535483dfa1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/56535483dfa1"}, "html": {"href": "#!/PhyNerd/qtutils/commits/56535483dfa1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-24T17:39:32.869001+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d40ef389adee", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/d40ef389adee"}, "html": {"href": "#!/PhyNerd/qtutils/commits/d40ef389adee"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-24T17:31:55.999583+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41367694.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41367694"}}, "parent": {"id": 41312797, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41312797.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41312797"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "You're right that it is ultimately up to application code to be compatible with the qt versions it wants to be compatible with, so they can always fall back on looking at QT_ENV to do different things. But it is inconsistent for widgets instantiated in code to be patched and ones coming from a .ui file to not be patched, so I'd like to get this working if possible (even if we're not using the patched methods in the labscript suite at the moment). \n\nAre you sure the patching function is to act on instances? [Here](https://github.com/spyder-ide/qtpy/blob/94298feed928e21842c9982d1386e15c568b8232/qtpy/QtWidgets.py) it looks like it is called once on the class.\n\nAnd patching the class like this appears to work for me. Here's a minimal example with a .ui file test.ui:\n\n\n```\n#!xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ui version=\"4.0\">\n <class>Form</class>\n <widget class=\"QWidget\" name=\"Form\">\n  <property name=\"geometry\">\n   <rect>\n    <x>0</x>\n    <y>0</y>\n    <width>400</width>\n    <height>300</height>\n   </rect>\n  </property>\n  <property name=\"windowTitle\">\n   <string>Form</string>\n  </property>\n  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n   <item>\n    <widget class=\"QPushButton\" name=\"pushButton\">\n     <property name=\"text\">\n      <string>Patched button</string>\n     </property>\n    </widget>\n   </item>\n  </layout>\n </widget>\n <resources/>\n <connections/>\n</ui>\n\n```\n\nAnd python code using the existing version of qtutils (that is, without this pull request):\n\n\n```\n#!python\n\nimport sys\n\nfrom PyQt4.QtGui import *\nfrom PyQt4.QtCore import *\nfrom PyQt4.Qt import *\n\nfrom qtutils import UiLoader\n\ndef event(self, event):\n    if event.type() == QEvent.ToolTip:\n        self.setToolTip(\"patch sucessful\")\n    return QWidget.event(self, event)\n\nQPushButton.event = event\n\nqapplication = QApplication(sys.argv)\nloader = UiLoader()\nui = loader.load('test.ui')\nui.show()\n\nsys.exit(qapplication.exec_())\n\n\n```\nWhich seems to work great:\n\n![button_patch.png](https://bitbucket.org/repo/Rg5nLg/images/1284003404-button_patch.png)\n\nSo if I understand correctly, we should be able to have the patches applied in `qt.py` with something like (with added deprecation errors to force user code to use the qt5 method names):\n\n\n```\n#!python\n    def _patch(cls, qt5_method_name, qt4_method_name):\n        \"\"\"In Qt 4, alias the qt5 method names to point to the qt4\n        equivalents. Replace the qt4 method with one that raises an exception\n        pointing the user to use the qt5 method name\"\"\"\n\n        # Alias the new method name to point to the existing method\n        setattr(cls, qt5_method_name, cls.__dict__[qt4_method_name])\n\n        def deprecation_error(self, *args, **kwargs):\n            msg = (\"{}.{} has been renamed to \".format(cls.__name__, qt4_method_name) +\n                   \"{}.{} in qt5.\".format(cls.__name__, qt5_method_name) +\n                   \"qtutils requires you use the new method names even in qt4 \" +\n                   \" (they are aliased to point to the existing methods) so that code works \" +\n                   \"with both qt4 and qt5\")\n            raise NameError(msg)\n\n        # Accesing the existing method by name will raise an error:\n        setattr(cls, qt4_method_name, deprecation_error)\n\n    _patch(QHeaderView, \"setSectionsMovable\", \"setMovable\")\n    _patch(QHeaderView, \"setSectionsClickable\", \"setClickable\")\n    _patch(QHeaderView, \"setSectionResizeMode\", \"setResizeMode\")\n\n    _patch(QFileDialog, \"getOpenFileName\", \"getOpenFileNamesAndFilter\")\n```\n\nThis is the same as doing this:\n\n\n```\n#!python\n\n    QtGui.QHeaderView.setSectionsMovable = QtGui.QHeaderView.setMovable\n    QtGui.QHeaderView.setSectionsClickable = QtGui.QHeaderView.setClickable\n    QtGui.QHeaderView.setSectionResizeMode = QtGui.QHeaderView.setResizeMode\n\n    QtGui.QFileDialog.getOpenFileName = QtGui.QFileDialog.getOpenFileNamesAndFilter\n```\n\nI just made a function to add deprecation errors, which I think are a good idea so that users don't acidentally write qt4 code that won't work on qt5, when the idea is that we're exposinga qt5 API but making it work on qt4 as well.", "markup": "markdown", "html": "<p>You're right that it is ultimately up to application code to be compatible with the qt versions it wants to be compatible with, so they can always fall back on looking at QT_ENV to do different things. But it is inconsistent for widgets instantiated in code to be patched and ones coming from a .ui file to not be patched, so I'd like to get this working if possible (even if we're not using the patched methods in the labscript suite at the moment). </p>\n<p>Are you sure the patching function is to act on instances? <a data-is-external-link=\"true\" href=\"https://github.com/spyder-ide/qtpy/blob/94298feed928e21842c9982d1386e15c568b8232/qtpy/QtWidgets.py\" rel=\"nofollow\">Here</a> it looks like it is called once on the class.</p>\n<p>And patching the class like this appears to work for me. Here's a minimal example with a .ui file test.ui:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;ui</span> <span class=\"na\">version=</span><span class=\"s\">&quot;4.0&quot;</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;class&gt;</span>Form<span class=\"nt\">&lt;/class&gt;</span>\n <span class=\"nt\">&lt;widget</span> <span class=\"na\">class=</span><span class=\"s\">&quot;QWidget&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Form&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">&quot;geometry&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;rect&gt;</span>\n    <span class=\"nt\">&lt;x&gt;</span>0<span class=\"nt\">&lt;/x&gt;</span>\n    <span class=\"nt\">&lt;y&gt;</span>0<span class=\"nt\">&lt;/y&gt;</span>\n    <span class=\"nt\">&lt;width&gt;</span>400<span class=\"nt\">&lt;/width&gt;</span>\n    <span class=\"nt\">&lt;height&gt;</span>300<span class=\"nt\">&lt;/height&gt;</span>\n   <span class=\"nt\">&lt;/rect&gt;</span>\n  <span class=\"nt\">&lt;/property&gt;</span>\n  <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">&quot;windowTitle&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;string&gt;</span>Form<span class=\"nt\">&lt;/string&gt;</span>\n  <span class=\"nt\">&lt;/property&gt;</span>\n  <span class=\"nt\">&lt;layout</span> <span class=\"na\">class=</span><span class=\"s\">&quot;QVBoxLayout&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;verticalLayout&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;item&gt;</span>\n    <span class=\"nt\">&lt;widget</span> <span class=\"na\">class=</span><span class=\"s\">&quot;QPushButton&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;pushButton&quot;</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">&quot;text&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;string&gt;</span>Patched button<span class=\"nt\">&lt;/string&gt;</span>\n     <span class=\"nt\">&lt;/property&gt;</span>\n    <span class=\"nt\">&lt;/widget&gt;</span>\n   <span class=\"nt\">&lt;/item&gt;</span>\n  <span class=\"nt\">&lt;/layout&gt;</span>\n <span class=\"nt\">&lt;/widget&gt;</span>\n <span class=\"nt\">&lt;resources/&gt;</span>\n <span class=\"nt\">&lt;connections/&gt;</span>\n<span class=\"nt\">&lt;/ui&gt;</span>\n</pre></div>\n\n\n<p>And python code using the existing version of qtutils (that is, without this pull request):</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">PyQt4.QtGui</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PyQt4.QtCore</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PyQt4.Qt</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">qtutils</span> <span class=\"kn\">import</span> <span class=\"n\">UiLoader</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">QEvent</span><span class=\"o\">.</span><span class=\"n\">ToolTip</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setToolTip</span><span class=\"p\">(</span><span class=\"s2\">&quot;patch sucessful&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">QWidget</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">)</span>\n\n<span class=\"n\">QPushButton</span><span class=\"o\">.</span><span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">event</span>\n\n<span class=\"n\">qapplication</span> <span class=\"o\">=</span> <span class=\"n\">QApplication</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">UiLoader</span><span class=\"p\">()</span>\n<span class=\"n\">ui</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.ui&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">qapplication</span><span class=\"o\">.</span><span class=\"n\">exec_</span><span class=\"p\">())</span>\n</pre></div>\n\n\n<p>Which seems to work great:</p>\n<p><img alt=\"button_patch.png\" src=\"data/bitbucket.org/repo/Rg5nLg/images/1284003404-button_patch.png\" /></p>\n<p>So if I understand correctly, we should be able to have the patches applied in <code>qt.py</code> with something like (with added deprecation errors to force user code to use the qt5 method names):</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"k\">def</span> <span class=\"nf\">_patch</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">qt5_method_name</span><span class=\"p\">,</span> <span class=\"n\">qt4_method_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;In Qt 4, alias the qt5 method names to point to the qt4</span>\n<span class=\"sd\">        equivalents. Replace the qt4 method with one that raises an exception</span>\n<span class=\"sd\">        pointing the user to use the qt5 method name&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># Alias the new method name to point to the existing method</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">qt5_method_name</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">qt4_method_name</span><span class=\"p\">])</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">deprecation_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;{}.{} has been renamed to &quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">qt4_method_name</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot;{}.{} in qt5.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">qt5_method_name</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot;qtutils requires you use the new method names even in qt4 &quot;</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot; (they are aliased to point to the existing methods) so that code works &quot;</span> <span class=\"o\">+</span>\n                   <span class=\"s2\">&quot;with both qt4 and qt5&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">NameError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Accesing the existing method by name will raise an error:</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">qt4_method_name</span><span class=\"p\">,</span> <span class=\"n\">deprecation_error</span><span class=\"p\">)</span>\n\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QHeaderView</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setSectionsMovable&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setMovable&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QHeaderView</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setSectionsClickable&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setClickable&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QHeaderView</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setSectionResizeMode&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;setResizeMode&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">_patch</span><span class=\"p\">(</span><span class=\"n\">QFileDialog</span><span class=\"p\">,</span> <span class=\"s2\">&quot;getOpenFileName&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;getOpenFileNamesAndFilter&quot;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>This is the same as doing this:</p>\n<div class=\"codehilite language-python\"><pre><span></span>    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setSectionsMovable</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setMovable</span>\n    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setSectionsClickable</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setClickable</span>\n    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setSectionResizeMode</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QHeaderView</span><span class=\"o\">.</span><span class=\"n\">setResizeMode</span>\n\n    <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QFileDialog</span><span class=\"o\">.</span><span class=\"n\">getOpenFileName</span> <span class=\"o\">=</span> <span class=\"n\">QtGui</span><span class=\"o\">.</span><span class=\"n\">QFileDialog</span><span class=\"o\">.</span><span class=\"n\">getOpenFileNamesAndFilter</span>\n</pre></div>\n\n\n<p>I just made a function to add deprecation errors, which I think are a good idea so that users don't acidentally write qt4 code that won't work on qt5, when the idea is that we're exposinga qt5 API but making it work on qt4 as well.</p>", "type": "rendered"}, "created_on": "2017-07-24T16:21:37.437556+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-24T16:42:34.718987+00:00", "type": "pullrequest_comment", "id": 41367694}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41369145.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41369145"}}, "parent": {"id": 41367694, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41367694.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41367694"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Eh, my implementation here has bugs - doesn't work as-is!\n\nEdit: Fixed, I think!", "markup": "markdown", "html": "<p>Eh, my implementation here has bugs - doesn't work as-is!</p>\n<p>Edit: Fixed, I think!</p>", "type": "rendered"}, "created_on": "2017-07-24T16:38:25.068297+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-24T16:41:07.031774+00:00", "type": "pullrequest_comment", "id": 41369145}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41367519.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41367519"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Ok so I'd say that this pull request in my oppinion is done now. \n\nThe monkey patching of UiLoader can be done once we actually need it by just monkey patching the PyQt/PySide modules rather then our own abstraction of the modules. This as already mentioned could break stuff for people unaware of the monkey patch so thats why I'm not in favor of doing it now. Maybe in the future we have a better solution to this problem.\n\nBut if there are further comments or ideas I'm also open to those.", "markup": "markdown", "html": "<p>Ok so I'd say that this pull request in my oppinion is done now. </p>\n<p>The monkey patching of UiLoader can be done once we actually need it by just monkey patching the PyQt/PySide modules rather then our own abstraction of the modules. This as already mentioned could break stuff for people unaware of the monkey patch so thats why I'm not in favor of doing it now. Maybe in the future we have a better solution to this problem.</p>\n<p>But if there are further comments or ideas I'm also open to those.</p>", "type": "rendered"}, "created_on": "2017-07-24T16:19:28.212434+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-24T16:19:28.303086+00:00", "type": "pullrequest_comment", "id": 41367519}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41360161.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41360161"}}, "parent": {"id": 41313286, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41313286.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41313286"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "I agree - we may discover that we are already using \"more complex qt stuff\" but I'm guessing we're not.\n\nSo we can just keep this library in mind in case it's worth switching to in the future.", "markup": "markdown", "html": "<p>I agree - we may discover that we are already using \"more complex qt stuff\" but I'm guessing we're not.</p>\n<p>So we can just keep this library in mind in case it's worth switching to in the future.</p>", "type": "rendered"}, "created_on": "2017-07-24T15:09:56.809736+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-24T15:09:56.812344+00:00", "type": "pullrequest_comment", "id": 41360161}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41313286.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41313286"}}, "parent": {"id": 41304829, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304829.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304829"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "The qtpy stuff seems nice and and more fleshed out. I would say that if we were to use more complex Qt stuff we should definitely use it. But I also think that each dependency, that we introduce that is non of our own can potentially break stuff or go in a way that we don't like. I'm also not a fan of a ever growing amount of dependencies.\n\nFor now I'd say we are better off using a abstraction of our own. That is more maintainable and lightweight.", "markup": "markdown", "html": "<p>The qtpy stuff seems nice and and more fleshed out. I would say that if we were to use more complex Qt stuff we should definitely use it. But I also think that each dependency, that we introduce that is non of our own can potentially break stuff or go in a way that we don't like. I'm also not a fan of a ever growing amount of dependencies.</p>\n<p>For now I'd say we are better off using a abstraction of our own. That is more maintainable and lightweight.</p>", "type": "rendered"}, "created_on": "2017-07-24T06:14:17.982832+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-24T06:14:18.043686+00:00", "type": "pullrequest_comment", "id": 41313286}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41312797.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41312797"}}, "parent": {"id": 41304434, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304434.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304434"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "nop doesn't work. \nThe qtpy function in suspect is supposed to be used on every instance of qheaderview.\nBut it's not that big of a issue as I noticed that the line that needed adjustment because of this was a line of mine and nothing from the labscript main branch.\n\nAlso you can always try catch this stuff or use QT_ENV to figure out what to do.", "markup": "markdown", "html": "<p>nop doesn't work. \nThe qtpy function in suspect is supposed to be used on every instance of qheaderview.\nBut it's not that big of a issue as I noticed that the line that needed adjustment because of this was a line of mine and nothing from the labscript main branch.</p>\n<p>Also you can always try catch this stuff or use QT_ENV to figure out what to do.</p>", "type": "rendered"}, "created_on": "2017-07-24T06:02:34.131244+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-24T06:02:34.189300+00:00", "type": "pullrequest_comment", "id": 41312797}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304829.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304829"}}, "parent": {"id": 41304590, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304590.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304590"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Ah yes, fair enough. It looks like we aren't using it anywhere, but I can easily see that you don't want to promote *all* widgets of a certain type, which all our uses currently do. They can get away with it because our ui files generally only have one TreeView in them or whatever, but obviously as soon as you add a second one you need to specify which is to be promoted.\n\nI also want to hang onto our own UI loader stuff because I've noticed that that's one place BLACS spends a lot of time during startup loading the same UI file for each tab, and so I've thought about adding a cache as a performance optimisation.\n\nI might experiment to see if the qtpy abstraction layer makes sense. I admit I have a general suspicion of projects in the same part of the ecosystem as IPython/jupyter, because they tend to do magic things with the interpreter that sometimes bite us. But a cursory look over qtpy's code looks like it's not doing anything too crazy.\n\nIf it does make sense to use it, the current work @PhyNerd is doing is still mostly useful - we would just replace the contents of his new file `qt.py` with some import lines to qtpy and everything else will be importing that via qtutils.", "markup": "markdown", "html": "<p>Ah yes, fair enough. It looks like we aren't using it anywhere, but I can easily see that you don't want to promote <em>all</em> widgets of a certain type, which all our uses currently do. They can get away with it because our ui files generally only have one TreeView in them or whatever, but obviously as soon as you add a second one you need to specify which is to be promoted.</p>\n<p>I also want to hang onto our own UI loader stuff because I've noticed that that's one place BLACS spends a lot of time during startup loading the same UI file for each tab, and so I've thought about adding a cache as a performance optimisation.</p>\n<p>I might experiment to see if the qtpy abstraction layer makes sense. I admit I have a general suspicion of projects in the same part of the ecosystem as IPython/jupyter, because they tend to do magic things with the interpreter that sometimes bite us. But a cursory look over qtpy's code looks like it's not doing anything too crazy.</p>\n<p>If it does make sense to use it, the current work @PhyNerd is doing is still mostly useful - we would just replace the contents of his new file <code>qt.py</code> with some import lines to qtpy and everything else will be importing that via qtutils.</p>", "type": "rendered"}, "created_on": "2017-07-23T23:55:08.137979+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T23:55:08.147110+00:00", "type": "pullrequest_comment", "id": 41304829}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304590.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304590"}}, "parent": {"id": 41304217, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304217.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304217"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "The UiLoader code we have is unique in that it allows dynamic widget promotion based on a widget name, at runtime, without needing to set anything in Qt Designer. I don't know if we actually use it in the labscript suite, but I like the functionality and want to keep it. I'm pretty sure no one else has done it (because it's quite difficult to do in PyQt).\n\nNot sure about the qt abstraction layer they provide in qtpy...could be worth it?", "markup": "markdown", "html": "<p>The UiLoader code we have is unique in that it allows dynamic widget promotion based on a widget name, at runtime, without needing to set anything in Qt Designer. I don't know if we actually use it in the labscript suite, but I like the functionality and want to keep it. I'm pretty sure no one else has done it (because it's quite difficult to do in PyQt).</p>\n<p>Not sure about the qt abstraction layer they provide in qtpy...could be worth it?</p>", "type": "rendered"}, "created_on": "2017-07-23T23:33:43.323983+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2017-07-23T23:33:43.325835+00:00", "type": "pullrequest_comment", "id": 41304590}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304434.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304434"}}, "parent": {"id": 41304217, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304217.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304217"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Mh I'm not sure this will work but I will try it out tomorrow.", "markup": "markdown", "html": "<p>Mh I'm not sure this will work but I will try it out tomorrow.</p>", "type": "rendered"}, "created_on": "2017-07-23T23:19:05.664428+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T23:19:05.700199+00:00", "type": "pullrequest_comment", "id": 41304434}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41304217.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41304217"}}, "parent": {"id": 41301873, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301873.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301873"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "This project:\n\nhttps://github.com/spyder-ide/qtpy/blob/master/qtpy/_patch/qheaderview.py\n\nWhich has similar aims - it is a Python Qt library abstraction layer - patches the class by adding methods to the existing class rather than subclassing it. Is that an option? Does that make the UI loader get the right class?\n\nI didn't realise earlier that you were replacing the class in the PyQt4 module with your subclass, I actually would have expected the UI loader to get your subclass.\n\nAlso, obviously this project qtpy could be useful. My instinct is that if our needs remain pretty simple we can stick with our own 1-file abstraction layer, but that if things get more complex we might want to use qtpy ourselves rather than maintain our own abstraction layer. It also has UI loader stuff which you might want to look at to see how they handle the problem you've observed.\n\n@philipstarkey, maybe you might want to look at qtpy and see if you think it makes any of qtutils obsolete? Obviously there's a lot it doesn't, but maybe the abstraction layer and the UI loader stuff?\n\nSince Spyder uses this qtpy package it looks like it should be around for a while.", "markup": "markdown", "html": "<p>This project:</p>\n<p><a href=\"https://github.com/spyder-ide/qtpy/blob/master/qtpy/_patch/qheaderview.py\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/spyder-ide/qtpy/blob/master/qtpy/_patch/qheaderview.py</a></p>\n<p>Which has similar aims - it is a Python Qt library abstraction layer - patches the class by adding methods to the existing class rather than subclassing it. Is that an option? Does that make the UI loader get the right class?</p>\n<p>I didn't realise earlier that you were replacing the class in the PyQt4 module with your subclass, I actually would have expected the UI loader to get your subclass.</p>\n<p>Also, obviously this project qtpy could be useful. My instinct is that if our needs remain pretty simple we can stick with our own 1-file abstraction layer, but that if things get more complex we might want to use qtpy ourselves rather than maintain our own abstraction layer. It also has UI loader stuff which you might want to look at to see how they handle the problem you've observed.</p>\n<p>@philipstarkey, maybe you might want to look at qtpy and see if you think it makes any of qtutils obsolete? Obviously there's a lot it doesn't, but maybe the abstraction layer and the UI loader stuff?</p>\n<p>Since Spyder uses this qtpy package it looks like it should be around for a while.</p>", "type": "rendered"}, "created_on": "2017-07-23T22:57:40.152177+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T22:57:40.160720+00:00", "type": "pullrequest_comment", "id": 41304217}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301873.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301873"}}, "parent": {"id": 41301828, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301828.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301828"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "I noticed one thing that could be considered a bug while porting BLACS:\n\nWhen using UiLoader you get the original PyQt4 version of QHeaderView (and all other classes that might get patched in the future). That is to be expected as we don't have code in place to monkey patch those classes too. And I'm not sure it's a good idea to monkey patch either as it might cause strange behavior if you don't know it's there. Any ideas on how we should handle this?", "markup": "markdown", "html": "<p>I noticed one thing that could be considered a bug while porting BLACS:</p>\n<p>When using UiLoader you get the original PyQt4 version of QHeaderView (and all other classes that might get patched in the future). That is to be expected as we don't have code in place to monkey patch those classes too. And I'm not sure it's a good idea to monkey patch either as it might cause strange behavior if you don't know it's there. Any ideas on how we should handle this?</p>", "type": "rendered"}, "created_on": "2017-07-23T16:47:53.374832+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T16:49:01.255732+00:00", "type": "pullrequest_comment", "id": 41301873}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301828.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301828"}}, "parent": {"id": 41301785, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301785.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301785"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Sounds great! There may be other Python 3 changes as well that we haven't anticipated, so will be good to have them all in one place. Thanks again!\n\nI've updated the whitespace-ignoring diff in the earlier comment.\n\nPending a little bit of testing, I am happy with this pull request as it is at the moment.", "markup": "markdown", "html": "<p>Sounds great! There may be other Python 3 changes as well that we haven't anticipated, so will be good to have them all in one place. Thanks again!</p>\n<p>I've updated the whitespace-ignoring diff in the earlier comment.</p>\n<p>Pending a little bit of testing, I am happy with this pull request as it is at the moment.</p>", "type": "rendered"}, "created_on": "2017-07-23T16:37:40.210718+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T16:37:40.212948+00:00", "type": "pullrequest_comment", "id": 41301828}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b48cec28d474", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/b48cec28d474"}, "html": {"href": "#!/PhyNerd/qtutils/commits/b48cec28d474"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T16:28:01.572790+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301785.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301785"}}, "parent": {"id": 41301738, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301738.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301738"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "I backed out and will create a new pullrequest when this is merged concerning the python3 outputbox string stuff.\nPythons future package is also surely the better way to go.", "markup": "markdown", "html": "<p>I backed out and will create a new pullrequest when this is merged concerning the python3 outputbox string stuff.\nPythons future package is also surely the better way to go.</p>", "type": "rendered"}, "created_on": "2017-07-23T16:27:50.428555+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T16:27:50.490091+00:00", "type": "pullrequest_comment", "id": 41301785}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\n* Python 3 outputbox fix\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b48cec28d474", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/b48cec28d474"}, "html": {"href": "#!/PhyNerd/qtutils/commits/b48cec28d474"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T16:24:42.178363+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301738.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301738"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "About Python 3 changes, a few things:\n\nFirstly, I'd vote to hold off Python 3 compatibility for a separate pull request so that we can review and test this one without more changes coming in. I know it slows things down a bit, but is more friendly to regression testing and ensures we can have fewer things in mind when we're reading over the changes.\n\nSecondly, once you are making Python 3 compatibility changes, I see you're changing strings a bit. To ensure things with strings really are the same on Python 2 and Python 3, what you'll want to do is `from __future__ import unicode_literals`, and then any strings that are definitely supposed to be bytestrings, prefix like `b'string'`.\n\nFor example, in your most recent commit, you got some strings (the `'stdout'` and `'stderr'` ones) and added `.encode('utf8')` to them. This does different things in Python 2 vs Python 3 (in Python 2 the strings start out being bytestrings and remain bytestrings, whereas in Python 3 they start out being unicode strings and become bytestrings), and although it gives the same result, it's less error-prone to make sure that actually the exact same thing is happening in both Python versions.\n\nSo the solution to this is to do the `unicode_literals` import and then prefix `b''` to make those bytestrings - then they don't need encoding at all. In both Python versions they are bytestrings.\n\nBut actually, I'd prefer to back out that change for now so that this pull request could remain about PyQt5.\n\nI would also prefer not to change the encoding of files from ascii until we drop Python 2 support, so with the german umlaut test sentence, if you could change it back to `'Der schnelle braune Fuchs ist \\xc3\\xbcber den faulen Hund gesprungen\\n'.decode('utf8')` but prefix a `b` to tell Python 3 it's a bytestring:\n\n`b'Der schnelle braune Fuchs ist \\xc3\\xbcber den faulen Hund gesprungen\\n'.decode('utf8')`\n\nthen you can get rid of the `utf8` encoding marker on the file.\n\nThe `b''` prefix is valid syntax on both Python 2 and Python 3 (in Python 2 it simply does nothing), so it can be used everywhere that you want to make the strings stay like they were in Python 2.", "markup": "markdown", "html": "<p>About Python 3 changes, a few things:</p>\n<p>Firstly, I'd vote to hold off Python 3 compatibility for a separate pull request so that we can review and test this one without more changes coming in. I know it slows things down a bit, but is more friendly to regression testing and ensures we can have fewer things in mind when we're reading over the changes.</p>\n<p>Secondly, once you are making Python 3 compatibility changes, I see you're changing strings a bit. To ensure things with strings really are the same on Python 2 and Python 3, what you'll want to do is <code>from __future__ import unicode_literals</code>, and then any strings that are definitely supposed to be bytestrings, prefix like <code>b'string'</code>.</p>\n<p>For example, in your most recent commit, you got some strings (the <code>'stdout'</code> and <code>'stderr'</code> ones) and added <code>.encode('utf8')</code> to them. This does different things in Python 2 vs Python 3 (in Python 2 the strings start out being bytestrings and remain bytestrings, whereas in Python 3 they start out being unicode strings and become bytestrings), and although it gives the same result, it's less error-prone to make sure that actually the exact same thing is happening in both Python versions.</p>\n<p>So the solution to this is to do the <code>unicode_literals</code> import and then prefix <code>b''</code> to make those bytestrings - then they don't need encoding at all. In both Python versions they are bytestrings.</p>\n<p>But actually, I'd prefer to back out that change for now so that this pull request could remain about PyQt5.</p>\n<p>I would also prefer not to change the encoding of files from ascii until we drop Python 2 support, so with the german umlaut test sentence, if you could change it back to <code>'Der schnelle braune Fuchs ist \\xc3\\xbcber den faulen Hund gesprungen\\n'.decode('utf8')</code> but prefix a <code>b</code> to tell Python 3 it's a bytestring:</p>\n<p><code>b'Der schnelle braune Fuchs ist \\xc3\\xbcber den faulen Hund gesprungen\\n'.decode('utf8')</code></p>\n<p>then you can get rid of the <code>utf8</code> encoding marker on the file.</p>\n<p>The <code>b''</code> prefix is valid syntax on both Python 2 and Python 3 (in Python 2 it simply does nothing), so it can be used everywhere that you want to make the strings stay like they were in Python 2.</p>", "type": "rendered"}, "created_on": "2017-07-23T16:19:02.147987+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T16:19:02.155671+00:00", "type": "pullrequest_comment", "id": 41301738}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\n* Python 3 outputbox fix\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3728b77192f3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/3728b77192f3"}, "html": {"href": "#!/PhyNerd/qtutils/commits/3728b77192f3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T16:16:31.073268+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301728.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301728"}}, "parent": {"id": 41301677, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301677.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301677"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Well the linter errors are just small white dots on the line in sublime and I usually ignore them.(I'm using the Anaconda sublime package) Just wanted to check if we could remove the only 3 dodts I had :)\nDid the adjustments for 2 and 3. As for 1 I'll just keep it the way it is.\n\nI also did a bit of python 3 adjustment earlier today on to the outputbox as lyse wasn't really running without this.", "markup": "markdown", "html": "<p>Well the linter errors are just small white dots on the line in sublime and I usually ignore them.(I'm using the Anaconda sublime package) Just wanted to check if we could remove the only 3 dodts I had :)\nDid the adjustments for 2 and 3. As for 1 I'll just keep it the way it is.</p>\n<p>I also did a bit of python 3 adjustment earlier today on to the outputbox as lyse wasn't really running without this.</p>", "type": "rendered"}, "created_on": "2017-07-23T16:15:31.098804+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T16:15:31.190018+00:00", "type": "pullrequest_comment", "id": 41301728}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41301677.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41301677"}}, "parent": {"id": 41299269, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41299269.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41299269"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "1. So the 'imported but never used' linter errors you can ignore - these are imported here so that they can be imported from here by other modules. Feel free to add a comment to these lines in whatever format tells your linter to ignore them if you like. It's probably the same linter I use (sometimes use - I keep misconfiguring it every time I upgrade my OS and then never bother to set it up again) and that anyone else using a linter would use, so no harm in adding the comments telling the linter what's up.\n\n2. Potentially to avoid it being garbage collected? I've seen this happen with processes - in certain contexts a subprocess never runs because it is garbage collected before the child actually starts. I'd vote to leave it in just in case. Oh, actually I see that the name is being overwritten once per loop anyway for the first three loops, so it can't be that. In that case, sure, feel free to remove the assignment.\n\n3. Meh, I don't mind if testing code is sloppy. But if you like (to make your linter complain less), move the lambda into the function call directly as an argument rather than assigning it a name.\n\n4. Ah, yes. I was always a bit slack with the copyright headers. If you don't mind, could you add one in, copying from one of the files that has Phil and me credited?", "markup": "markdown", "html": "<ol>\n<li>\n<p>So the 'imported but never used' linter errors you can ignore - these are imported here so that they can be imported from here by other modules. Feel free to add a comment to these lines in whatever format tells your linter to ignore them if you like. It's probably the same linter I use (sometimes use - I keep misconfiguring it every time I upgrade my OS and then never bother to set it up again) and that anyone else using a linter would use, so no harm in adding the comments telling the linter what's up.</p>\n</li>\n<li>\n<p>Potentially to avoid it being garbage collected? I've seen this happen with processes - in certain contexts a subprocess never runs because it is garbage collected before the child actually starts. I'd vote to leave it in just in case. Oh, actually I see that the name is being overwritten once per loop anyway for the first three loops, so it can't be that. In that case, sure, feel free to remove the assignment.</p>\n</li>\n<li>\n<p>Meh, I don't mind if testing code is sloppy. But if you like (to make your linter complain less), move the lambda into the function call directly as an argument rather than assigning it a name.</p>\n</li>\n<li>\n<p>Ah, yes. I was always a bit slack with the copyright headers. If you don't mind, could you add one in, copying from one of the files that has Phil and me credited?</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2017-07-23T16:03:43.470809+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T16:05:20.657988+00:00", "type": "pullrequest_comment", "id": 41301677}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\n* Python 3 outputbox fix\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7af6d017c573", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/7af6d017c573"}, "html": {"href": "#!/PhyNerd/qtutils/commits/7af6d017c573"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T12:56:55.392485+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7af6d017c573", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/7af6d017c573"}, "html": {"href": "#!/PhyNerd/qtutils/commits/7af6d017c573"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T11:01:18.373185+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41299269.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41299269"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Ok so my editor still gives me a few PEP8 comments:\n\n1. \"__init__.py\"  these imports are imported but never used:\n```\n#!python\n\n\nfrom qtutils.invoke_in_main import inmain, inmain_later, inthread, inmain_decorator\n\nfrom qtutils.qsettings_wrapper import QSettingsWrapper\nfrom qtutils.disconnect_contextmanager import DisconnectContextManager\nfrom qtutils.UiLoader import UiLoader\n```\n\n2. \"invoke_in_main.py\" lines 131 the variable thread is never used. So why assign it?\n\n```\n#!python\n\nthread = inthread(loop, index + 1) \n```\n Also in the same file in line 157 a lambda expression is assigned to a variable usually one should use def in that case. Or just move it into the functions arguments below.\n\n```\n#!python\n\nx = lambda: inmain(myFunction2)\n```\n\nAnd I spotted that the \"auto_scroll_to_end.py\" doesn't have a copyright header as well as the \"icons/_build.py\" that not really a issue but we could fix it while we are at it.", "markup": "markdown", "html": "<p>Ok so my editor still gives me a few PEP8 comments:</p>\n<ol>\n<li>\"<strong>init</strong>.py\"  these imports are imported but never used:</li>\n</ol>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">qtutils.invoke_in_main</span> <span class=\"kn\">import</span> <span class=\"n\">inmain</span><span class=\"p\">,</span> <span class=\"n\">inmain_later</span><span class=\"p\">,</span> <span class=\"n\">inthread</span><span class=\"p\">,</span> <span class=\"n\">inmain_decorator</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">qtutils.qsettings_wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">QSettingsWrapper</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qtutils.disconnect_contextmanager</span> <span class=\"kn\">import</span> <span class=\"n\">DisconnectContextManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qtutils.UiLoader</span> <span class=\"kn\">import</span> <span class=\"n\">UiLoader</span>\n</pre></div>\n\n\n<ol>\n<li>\"invoke_in_main.py\" lines 131 the variable thread is never used. So why assign it?</li>\n</ol>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"n\">inthread</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">index</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> \n</pre></div>\n\n\n<p>Also in the same file in line 157 a lambda expression is assigned to a variable usually one should use def in that case. Or just move it into the functions arguments below.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">inmain</span><span class=\"p\">(</span><span class=\"n\">myFunction2</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>And I spotted that the \"auto_scroll_to_end.py\" doesn't have a copyright header as well as the \"icons/_build.py\" that not really a issue but we could fix it while we are at it.</p>", "type": "rendered"}, "created_on": "2017-07-23T08:03:26.185646+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T08:27:42.793932+00:00", "type": "pullrequest_comment", "id": 41299269}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7f3f3adeea80", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/7f3f3adeea80"}, "html": {"href": "#!/PhyNerd/qtutils/commits/7f3f3adeea80"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T08:07:54.081383+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41299185.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41299185"}}, "parent": {"id": 41297882, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297882.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297882"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "1. Got rid of the import. I'll be looking at more files to see if there are any more unused imports. And then post them here for discussion or remove them immediately. (by the way the labscript_suite has lots of unused imports that could be gotten rid if someone has too much time)\n\n2. The text was so long I must have overlooked those thanks!\n\n3. Ok\n\n4. Good Eye! It would not have broken anything to keep it in so I didn't spot that. I only replaced the imports and tested if something broke. Didn't look into the code much.", "markup": "markdown", "html": "<ol>\n<li>\n<p>Got rid of the import. I'll be looking at more files to see if there are any more unused imports. And then post them here for discussion or remove them immediately. (by the way the labscript_suite has lots of unused imports that could be gotten rid if someone has too much time)</p>\n</li>\n<li>\n<p>The text was so long I must have overlooked those thanks!</p>\n</li>\n<li>\n<p>Ok</p>\n</li>\n<li>\n<p>Good Eye! It would not have broken anything to keep it in so I didn't spot that. I only replaced the imports and tested if something broke. Didn't look into the code much.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2017-07-23T07:52:09.615403+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T07:52:09.692750+00:00", "type": "pullrequest_comment", "id": 41299185}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "58373a984890", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/58373a984890"}, "html": {"href": "#!/PhyNerd/qtutils/commits/58373a984890"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T07:45:24.009238+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297882.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297882"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Ok, looking good!  A few more comments for when you next look at this:\n\n\n1. in `__init__.py`, `qtlock` now gets imported twice, so one of them can be gotten rid of.\n\n2. in the icons building file, the error message in  `find_pyrcc5()` contains a few references to PyQt4 instead of PyQt5\n\n3. The copyright header of `qt.py` still says `Qt.py`\n\n4. QVariant is not directly used in API v2, so in `qsetttings_wrapper.py` it can be gotten rid of. Drop the import line for `QVariant` and erase the lines later in the `_get()` method:\n\n```\n#!python\n\n        if QVariant is not None and isinstance(valrepr, QVariant):\n            valrepr = str(valrepr.toString())\n```\n\nThe conversion of a `QVariant` to a Python object is done automatically in API V2, so these lines will never encounter a QVariant, so they can be gotten rid of.", "markup": "markdown", "html": "<p>Ok, looking good!  A few more comments for when you next look at this:</p>\n<ol>\n<li>\n<p>in <code>__init__.py</code>, <code>qtlock</code> now gets imported twice, so one of them can be gotten rid of.</p>\n</li>\n<li>\n<p>in the icons building file, the error message in  <code>find_pyrcc5()</code> contains a few references to PyQt4 instead of PyQt5</p>\n</li>\n<li>\n<p>The copyright header of <code>qt.py</code> still says <code>Qt.py</code></p>\n</li>\n<li>\n<p>QVariant is not directly used in API v2, so in <code>qsetttings_wrapper.py</code> it can be gotten rid of. Drop the import line for <code>QVariant</code> and erase the lines later in the <code>_get()</code> method:</p>\n</li>\n</ol>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"k\">if</span> <span class=\"n\">QVariant</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">valrepr</span><span class=\"p\">,</span> <span class=\"n\">QVariant</span><span class=\"p\">):</span>\n            <span class=\"n\">valrepr</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">valrepr</span><span class=\"o\">.</span><span class=\"n\">toString</span><span class=\"p\">())</span>\n</pre></div>\n\n\n<p>The conversion of a <code>QVariant</code> to a Python object is done automatically in API V2, so these lines will never encounter a QVariant, so they can be gotten rid of.</p>", "type": "rendered"}, "created_on": "2017-07-23T02:11:56.340296+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T02:11:56.342576+00:00", "type": "pullrequest_comment", "id": 41297882}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297687.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297687"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Hey @PhyNerd,\n\nI see you have a few lines like `if qtutils.qt.QT_ENV is 'PySide'`, which you should change to `if qtutils.qt.QT_ENV == 'PySide'`, because the `is` operator is checking object identity rather than value, so it's looking to see if the two strings reside at the same RAM address rather than if their values are equal. In CPython and for these strings this nonetheless works, because short strings are re-used by the interpreter as an optimisation, but this is an implementation detail that shouldn't be relied on and would not work if the strings were longer or not alphanumeric.", "markup": "markdown", "html": "<p>Hey @PhyNerd,</p>\n<p>I see you have a few lines like <code>if qtutils.qt.QT_ENV is 'PySide'</code>, which you should change to <code>if qtutils.qt.QT_ENV == 'PySide'</code>, because the <code>is</code> operator is checking object identity rather than value, so it's looking to see if the two strings reside at the same RAM address rather than if their values are equal. In CPython and for these strings this nonetheless works, because short strings are re-used by the interpreter as an optimisation, but this is an implementation detail that shouldn't be relied on and would not work if the strings were longer or not alphanumeric.</p>", "type": "rendered"}, "created_on": "2017-07-23T00:38:19.262023+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T00:43:58.948322+00:00", "type": "pullrequest_comment", "id": 41297687}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fb0e1c3dae4d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/fb0e1c3dae4d"}, "html": {"href": "#!/PhyNerd/qtutils/commits/fb0e1c3dae4d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T00:42:27.348251+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297692.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297692"}}, "parent": {"id": 41297688, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297688.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297688"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "No problem, thanks for all your hard work!", "markup": "markdown", "html": "<p>No problem, thanks for all your hard work!</p>", "type": "rendered"}, "created_on": "2017-07-23T00:40:20.619377+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2017-07-23T00:40:20.622251+00:00", "type": "pullrequest_comment", "id": 41297692}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297690.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297690"}}, "parent": {"id": 41297687, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297687.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297687"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "thanks I didn't know that will change that right away", "markup": "markdown", "html": "<p>thanks I didn't know that will change that right away</p>", "type": "rendered"}, "created_on": "2017-07-23T00:39:31.859675+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T00:39:31.908687+00:00", "type": "pullrequest_comment", "id": 41297690}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41297688.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41297688"}}, "parent": {"id": 41296250, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1/comments/41296250.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1/_/diff#comment-41296250"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}, "content": {"raw": "Thanks for the comprehensive review.\nAll the proposed changes make sense.\nDid the changes and little testing and still works. \nThe API check also seems to work.\n(sorry for the short answer but it's getting really late and I'm tired)", "markup": "markdown", "html": "<p>Thanks for the comprehensive review.\nAll the proposed changes make sense.\nDid the changes and little testing and still works. \nThe API check also seems to work.\n(sorry for the short answer but it's getting really late and I'm tired)</p>", "type": "rendered"}, "created_on": "2017-07-23T00:39:14.386336+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-23T00:39:14.468185+00:00", "type": "pullrequest_comment", "id": 41297688}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}, {"update": {"description": "* PEP8 formating\r\n\r\n* PyQt5 imports\r\n\r\n* german grammer fix :P\r\n\r\n* Qt abstraction wrapper\r\n\r\n* PyQt4 API v2\r\n\r\nMost of the PEP8 stuff is whitespaces so it might help to set ignore whitespaces when reviewing.\r\nAfter this we should also raise the version number to 2 so that the updated labscript_suite will only work with this version of qtutils.", "title": "PyQt5", "destination": {"commit": {"hash": "478e547522b4", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/478e547522b4.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/478e547522b4"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c4e7eae6d9f8", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils/commit/c4e7eae6d9f8"}, "html": {"href": "#!/PhyNerd/qtutils/commits/c4e7eae6d9f8"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/PhyNerd/qtutils"}, "html": {"href": "#!/PhyNerd/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "PhyNerd/qtutils", "uuid": "{aff9a68b-d7af-4fb7-9c29-1dbe13f4bcc7}"}, "branch": {"name": "default"}}, "state": "OPEN", "author": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "date": "2017-07-23T00:36:35.162276+00:00"}, "pull_request": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/1.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/1"}}, "title": "PyQt5"}}], "next": "data/repositories/philipstarkey/qtutils/pullrequests/1/activity_ctx=ERUEMSb.json"}