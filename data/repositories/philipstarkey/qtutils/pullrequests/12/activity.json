{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70929871.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70929871"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "Apparently decline reasons don\u2019t show up on the main page\u2026when I declined it I wrote:\n\n> Given pull request #14 has now been merged, I don't think this one is needed anymore  ", "markup": "markdown", "html": "<p>Apparently decline reasons don\u2019t show up on the main page\u2026when I declined it I wrote:</p>\n<blockquote>\n<p>Given <a href=\"#!/philipstarkey/qtutils/pull-requests/14/compatibility-with-coloured-output-from\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #14</a> has now been merged, I don't think this one is needed anymore  </p>\n</blockquote>", "type": "rendered"}, "created_on": "2018-07-25T00:15:19.429702+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-07-25T00:15:19.482788+00:00", "type": "pullrequest_comment", "id": 70929871}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"update": {"description": "**Basic syntax highlighter for \u201clog levels\u201d**\r\n\r\nHighlights text from \u201c\\[level\\] \u201c to end of line, where level is trace, debug, info, warn, error, fatal. \r\n\r\nIncludes simple tests\r\n\r\nSeparate fix:\r\n\r\n* Suspect func charformats\\(charformat\\_repr\\) was never actually memoizing QTextFormat objects as they were stored indexed by a tuple but were looked up by a tuple repr \\(ie string\\). Fixed and tested.", "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps", "destination": {"commit": {"hash": "7629e11fe880", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/7629e11fe880.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/7629e11fe880"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "Given pull request #14 has now been merged, I don't think this one is needed anymore", "source": {"commit": {"hash": "d1bd4ce77488", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/qtutils/commit/d1bd4ce77488"}, "html": {"href": "#!/monashspinor/qtutils/commits/d1bd4ce77488"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/qtutils"}, "html": {"href": "#!/monashspinor/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e3d4252c-51ef-4919-9613-aeb0bc86978a}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "monashspinor/qtutils", "uuid": "{e3d4252c-51ef-4919-9613-aeb0bc86978a}"}, "branch": {"name": "syntax_highlighting"}}, "state": "DECLINED", "author": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "date": "2018-07-25T00:14:15.583626+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70774850.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70774850"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "So I've had a go at an alternate implementation in pull request #14. The upshot is that there is now a `RichStreamHandler` logging handler and `rich_print` function in zprocess 2.5.1, and they can be used to provide coloured output from a subprocess (or from the same process, no matter). The logging handler can be deployed BLACS-wide or labscript-suite-wide for coloured logging everywhere, and the rich_print function can be used to get more creative with colours and formats if you like, or to print colour if you don't want to make a logger instance (I'm guessing this is what you will do Lincoln - particularly since there is no 'TRACE' log level). They both fall back to plain output if they are not connected to an OutputBox.", "markup": "markdown", "html": "<p>So I've had a go at an alternate implementation in <a href=\"#!/philipstarkey/qtutils/pull-requests/14/compatibility-with-coloured-output-from\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #14</a>. The upshot is that there is now a <code>RichStreamHandler</code> logging handler and <code>rich_print</code> function in zprocess 2.5.1, and they can be used to provide coloured output from a subprocess (or from the same process, no matter). The logging handler can be deployed BLACS-wide or labscript-suite-wide for coloured logging everywhere, and the rich_print function can be used to get more creative with colours and formats if you like, or to print colour if you don't want to make a logger instance (I'm guessing this is what you will do Lincoln - particularly since there is no 'TRACE' log level). They both fall back to plain output if they are not connected to an OutputBox.</p>", "type": "rendered"}, "created_on": "2018-07-23T20:33:12.296380+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-07-23T20:34:36.205243+00:00", "type": "pullrequest_comment", "id": 70774850}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70741930.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70741930"}}, "parent": {"id": 70680231, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70680231.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70680231"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "The outputbox receives messages from all streams over a single zmq socket with multipart messages - the first message being the colour/bold/italic info (or 'stdout' or 'stderr' which are shorthand for white and red) and the second message being the content. So multiple zmq sockets would be unnecessary.\n\nCould be worth subbclassing the StreamHandler of the logging module, having it check if stdout is a zprocess.OutputInterceptor and calling a to-be-written method of the OutputInterceptor that allows you to specify the colour. Presently the OutputInterceptor just writes 'stdout' or 'stderr' for the formatting message but it could write anything you like. The logging handler could then be used labscript-suite-wide.\n\nThe bugfix is welcome but I would swap it so that the memoisation is by string rather than by tuples. With your fix 'stdout' and 'stderr' are not memoised, and the code catches a KeyError every time they are looked up, which is likely to be not super performant (though it can't be that bad if the memoisation was broken all along, good catch!). \n\nI introduced the colours for the express purpose of colourising log output to make things more readable, so I'm behind this, just a matter of hashing out the implementation.\n\nSo I'm thinking:\n\nI write a zprocess functions called print_debug print_error etc that accept text and output it with formatting. If stdout is just a normal terminal or something else then this gets ignored and the text will be written to stdout unmodified. If stdout is an OutputInterceptor though then the formatting info gets sent along to the receiving OutputBox. Code can call these functions explicitly, or, more likely, a logging handler will plug into it and colourise by severity. setup_logging can then define a logging handler that does this so that it gets used labscript-wide.\n\nI'm not too bothered by implicitly colourising by regex, but it would be nice to be able to colourise output without having to include the magic words as well.", "markup": "markdown", "html": "<p>The outputbox receives messages from all streams over a single zmq socket with multipart messages - the first message being the colour/bold/italic info (or 'stdout' or 'stderr' which are shorthand for white and red) and the second message being the content. So multiple zmq sockets would be unnecessary.</p>\n<p>Could be worth subbclassing the StreamHandler of the logging module, having it check if stdout is a zprocess.OutputInterceptor and calling a to-be-written method of the OutputInterceptor that allows you to specify the colour. Presently the OutputInterceptor just writes 'stdout' or 'stderr' for the formatting message but it could write anything you like. The logging handler could then be used labscript-suite-wide.</p>\n<p>The bugfix is welcome but I would swap it so that the memoisation is by string rather than by tuples. With your fix 'stdout' and 'stderr' are not memoised, and the code catches a KeyError every time they are looked up, which is likely to be not super performant (though it can't be that bad if the memoisation was broken all along, good catch!). </p>\n<p>I introduced the colours for the express purpose of colourising log output to make things more readable, so I'm behind this, just a matter of hashing out the implementation.</p>\n<p>So I'm thinking:</p>\n<p>I write a zprocess functions called print_debug print_error etc that accept text and output it with formatting. If stdout is just a normal terminal or something else then this gets ignored and the text will be written to stdout unmodified. If stdout is an OutputInterceptor though then the formatting info gets sent along to the receiving OutputBox. Code can call these functions explicitly, or, more likely, a logging handler will plug into it and colourise by severity. setup_logging can then define a logging handler that does this so that it gets used labscript-wide.</p>\n<p>I'm not too bothered by implicitly colourising by regex, but it would be nice to be able to colourise output without having to include the magic words as well.</p>", "type": "rendered"}, "created_on": "2018-07-23T15:15:17.900602+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-07-23T16:16:27.285925+00:00", "type": "pullrequest_comment", "id": 70741930}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70746199.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70746199"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "Pyqt's documentation says \"A QColor or a QGradient may be used whenever a QBrush is expected.\", but Qt itself does not say this. We should leave it using a QBrush for maximum compat with PySide2 etc which may not be as flexible.", "markup": "markdown", "html": "<p>Pyqt's documentation says \"A QColor or a QGradient may be used whenever a QBrush is expected.\", but Qt itself does not say this. We should leave it using a QBrush for maximum compat with PySide2 etc which may not be as flexible.</p>", "type": "rendered"}, "created_on": "2018-07-23T15:44:29.809870+00:00", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}, "updated_on": "2018-07-23T15:44:40.511514+00:00", "type": "pullrequest_comment", "id": 70746199}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70680231.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70680231"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "You might be right that this is not for putting in qtutils\u2026 \n\nI shouldn\u2019t have referred to these as \u2018log\u2019 messages. They do not have anything much to do with logging as it is implemented in the main labscript actors \\(BLACS et al\\), which is mostly about tracking internal stuff rather than what happens in particular devices. I just exploited the traditional \u2018log levels\u2019 as flags for how messages should be coloured.\n\nThe aim was to get a simple way of having more colourful output in BLACS, runmanager and lyse \u201cterminals\u201d \\(outputboxes\\), without overloading stderr with non-error messages \\(warnings and notices\\). \n\nClearly something needs to be done about logging more generally, because having separate threads write to the same file which then gets clobbered on rollover is not working, and we need to restart BLACS every day - or more often - as a result. The solution to this is of course UDP logging which is standardised, but this is a much bigger issue than what I was trying to address here, which was finding a way of highlighting messages in the \\(sometimes voluminous\\) output in our various consoles.\n\nI considered a few approaches. One would have been to put ANSI escapes into the print messages and then have Outputbox render ANSI. Unpleasant on both ends. Even worse would be to use separate file descriptor \\(and therefore potentially separate zmq channels when multiprocessing\\) for different levels. I therefore picked a simple enough regexp which would be unlikely to be triggered unintentionally. \n\n\\(A future refinement of logging might choose to look at these messages as they are returned to the main process over zmq and copy matches to a log handler, but in that case that code - or maybe the the log receiver - would add the source, timestamp and so on\\).\n\nI\u2019m happy enough to put it elsewhere, but seems pointless to have to pull it in to particular devices, when it would be harmless to have applied to all BLACS devices?", "markup": "markdown", "html": "<p>You might be right that this is not for putting in qtutils\u2026 </p>\n<p>I shouldn\u2019t have referred to these as \u2018log\u2019 messages. They do not have anything much to do with logging as it is implemented in the main labscript actors (BLACS et al), which is mostly about tracking internal stuff rather than what happens in particular devices. I just exploited the traditional \u2018log levels\u2019 as flags for how messages should be coloured.</p>\n<p>The aim was to get a simple way of having more colourful output in BLACS, runmanager and lyse \u201cterminals\u201d (outputboxes), without overloading stderr with non-error messages (warnings and notices). </p>\n<p>Clearly something needs to be done about logging more generally, because having separate threads write to the same file which then gets clobbered on rollover is not working, and we need to restart BLACS every day - or more often - as a result. The solution to this is of course UDP logging which is standardised, but this is a much bigger issue than what I was trying to address here, which was finding a way of highlighting messages in the (sometimes voluminous) output in our various consoles.</p>\n<p>I considered a few approaches. One would have been to put ANSI escapes into the print messages and then have Outputbox render ANSI. Unpleasant on both ends. Even worse would be to use separate file descriptor (and therefore potentially separate zmq channels when multiprocessing) for different levels. I therefore picked a simple enough regexp which would be unlikely to be triggered unintentionally. </p>\n<p>(A future refinement of logging might choose to look at these messages as they are returned to the main process over zmq and copy matches to a log handler, but in that case that code - or maybe the the log receiver - would add the source, timestamp and so on).</p>\n<p>I\u2019m happy enough to put it elsewhere, but seems pointless to have to pull it in to particular devices, when it would be harmless to have applied to all BLACS devices?</p>", "type": "rendered"}, "created_on": "2018-07-23T08:04:29.224925+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "updated_on": "2018-07-23T08:04:29.332855+00:00", "type": "pullrequest_comment", "id": 70680231}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70666199.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70666199"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "I\u2019m not sure if qtutils is the right place for this code.\n\nMy concerns are mainly due to the expected format of the log messages in order to have them syntax highlighted seems rather specific \\(given that log message formats can be completely customised in Python\\). The test cases don\u2019t look like the format of BLACS log lines either, so I\u2019m wondering if this is even just device specific? Even if the code is for all devices, it seem like it\u2019s labscript\\_suite specific and probably isn\u2019t general enough for qtutils.\n\n My suggestion would be that:\n\n* If the syntax highlighter is written to match the BLACS log format \\(which currently follows `TIME LEVEL SOURCE: MESSAGE` , then the `QSyntaxHighlighter` subclass should be included in labscript\\_utils.setup\\_logging and imported into BLACS.tab\\_base\\_classes and used in `Tab.__init__` where the `OutputBox` is constructed.\n* If the syntax highlighter is written to match messages that are coming from a particular device \\(which is perhaps what is happening given the test cases are assuming a format of `[level] message`\\) then the `QSyntaxHighlighter` subclass should exist with the rest of the device code in labscript\\_devices, and be used in the `DeviceTab` subclass from within the `initialise_GUI` method \\(which has access to the `OutputBox` through `self._output_box`\\).\n\nIt looks like, with that moved, the rest of the pull request is minor bug fixes? We'd need to test the `QBrush` vs `QColor` change a bit as I'm guessing it's either a PyQt4 vs PyQt5 change, or worse, a change between minor versions of PyQt \\(somewhere\\).", "markup": "markdown", "html": "<p>I\u2019m not sure if qtutils is the right place for this code.</p>\n<p>My concerns are mainly due to the expected format of the log messages in order to have them syntax highlighted seems rather specific (given that log message formats can be completely customised in Python). The test cases don\u2019t look like the format of BLACS log lines either, so I\u2019m wondering if this is even just device specific? Even if the code is for all devices, it seem like it\u2019s labscript_suite specific and probably isn\u2019t general enough for qtutils.</p>\n<p>My suggestion would be that:</p>\n<ul>\n<li>If the syntax highlighter is written to match the BLACS log format (which currently follows <code>TIME LEVEL SOURCE: MESSAGE</code> , then the <code>QSyntaxHighlighter</code> subclass should be included in labscript_utils.setup_logging and imported into BLACS.tab_base_classes and used in <code>Tab.__init__</code> where the <code>OutputBox</code> is constructed.</li>\n<li>If the syntax highlighter is written to match messages that are coming from a particular device (which is perhaps what is happening given the test cases are assuming a format of <code>[level] message</code>) then the <code>QSyntaxHighlighter</code> subclass should exist with the rest of the device code in labscript_devices, and be used in the <code>DeviceTab</code> subclass from within the <code>initialise_GUI</code> method (which has access to the <code>OutputBox</code> through <code>self._output_box</code>).</li>\n</ul>\n<p>It looks like, with that moved, the rest of the pull request is minor bug fixes? We'd need to test the <code>QBrush</code> vs <code>QColor</code> change a bit as I'm guessing it's either a PyQt4 vs PyQt5 change, or worse, a change between minor versions of PyQt (somewhere).</p>", "type": "rendered"}, "created_on": "2018-07-23T05:03:32.590079+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": "2018-07-23T05:03:32.695060+00:00", "type": "pullrequest_comment", "id": 70666199}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"comment": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70646210.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70646210"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "\u201cHighlights\u201d = \u201ccolorizes\u201d, obviously.\n\nUses bold and italics variously for more severe messages.\n\nMotivation: The device driver I\u2019ve written is chatty in its BLACS console. Tracebacks stand out of course in red but give code-level information. Exception handling gives us a chance to provide physics-level info, separate from the code-level info \\(as we do elsewhere with Raise LabscriptError, \u201cadvice\u201d\\), but this info gets overlooked because of the traceback. Making it a different colour lets us make useful \u201cphysics\u201d advice from exception handling stand out, before allowing the python exception to take place and report what the lower-level consequence was for the driver. I don\u2019t want to preempt the driver exception.", "markup": "markdown", "html": "<p>\u201cHighlights\u201d = \u201ccolorizes\u201d, obviously.</p>\n<p>Uses bold and italics variously for more severe messages.</p>\n<p>Motivation: The device driver I\u2019ve written is chatty in its BLACS console. Tracebacks stand out of course in red but give code-level information. Exception handling gives us a chance to provide physics-level info, separate from the code-level info (as we do elsewhere with Raise LabscriptError, \u201cadvice\u201d), but this info gets overlooked because of the traceback. Making it a different colour lets us make useful \u201cphysics\u201d advice from exception handling stand out, before allowing the python exception to take place and report what the lower-level consequence was for the driver. I don\u2019t want to preempt the driver exception.</p>", "type": "rendered"}, "created_on": "2018-07-22T00:46:05.344790+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "updated_on": "2018-07-22T00:46:05.417406+00:00", "type": "pullrequest_comment", "id": 70646210}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"update": {"description": "**Basic syntax highlighter for \u201clog levels\u201d**\r\n\r\nHighlights text from \u201c\\[level\\] \u201c to end of line, where level is trace, debug, info, warn, error, fatal. \r\n\r\nIncludes simple tests\r\n\r\nSeparate fix:\r\n\r\n* Suspect func charformats\\(charformat\\_repr\\) was never actually memoizing QTextFormat objects as they were stored indexed by a tuple but were looked up by a tuple repr \\(ie string\\). Fixed and tested.", "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps", "destination": {"commit": {"hash": "d087c7e6fc80", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/d087c7e6fc80.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/d087c7e6fc80"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d1bd4ce77488", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/qtutils/commit/d1bd4ce77488"}, "html": {"href": "#!/monashspinor/qtutils/commits/d1bd4ce77488"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/qtutils"}, "html": {"href": "#!/monashspinor/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e3d4252c-51ef-4919-9613-aeb0bc86978a}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "monashspinor/qtutils", "uuid": "{e3d4252c-51ef-4919-9613-aeb0bc86978a}"}, "branch": {"name": "syntax_highlighting"}}, "state": "OPEN", "author": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "date": "2018-07-22T00:40:26.938230+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}, {"update": {"description": "**Basic syntax highlighter for \u201clog levels\u201d**\r\n\r\nHighlights text from \u201c\\[level\\] \u201c to end of line, where level is trace, debug, info, warn, error, fatal. \r\n\r\nIncludes simple tests\r\n\r\nSeparate fix:\r\n\r\n* Suspect func charformats\\(charformat\\_repr\\) was never actually memoizing QTextFormat objects as they were stored indexed by a tuple but were looked up by a tuple repr \\(ie string\\). Fixed and tested.", "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps", "destination": {"commit": {"hash": "d087c7e6fc80", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/d087c7e6fc80.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/d087c7e6fc80"}}}, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d1bd4ce77488", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/qtutils/commit/d1bd4ce77488"}, "html": {"href": "#!/monashspinor/qtutils/commits/d1bd4ce77488"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/monashspinor/qtutils"}, "html": {"href": "#!/monashspinor/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e3d4252c-51ef-4919-9613-aeb0bc86978a}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "monashspinor/qtutils", "uuid": "{e3d4252c-51ef-4919-9613-aeb0bc86978a}"}, "branch": {"name": "syntax_highlighting"}}, "state": "OPEN", "author": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "date": "2018-07-22T00:40:26.886851+00:00"}, "pull_request": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}}]}