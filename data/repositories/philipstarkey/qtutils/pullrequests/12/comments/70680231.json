{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12/comments/70680231.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12/_/diff#comment-70680231"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/pullrequests/12.json"}, "html": {"href": "#!/philipstarkey/qtutils/pull-requests/12"}}, "title": "Syntax highlighting: basic syntax highlighter based on \"log levels\" regexps"}, "content": {"raw": "You might be right that this is not for putting in qtutils\u2026 \n\nI shouldn\u2019t have referred to these as \u2018log\u2019 messages. They do not have anything much to do with logging as it is implemented in the main labscript actors \\(BLACS et al\\), which is mostly about tracking internal stuff rather than what happens in particular devices. I just exploited the traditional \u2018log levels\u2019 as flags for how messages should be coloured.\n\nThe aim was to get a simple way of having more colourful output in BLACS, runmanager and lyse \u201cterminals\u201d \\(outputboxes\\), without overloading stderr with non-error messages \\(warnings and notices\\). \n\nClearly something needs to be done about logging more generally, because having separate threads write to the same file which then gets clobbered on rollover is not working, and we need to restart BLACS every day - or more often - as a result. The solution to this is of course UDP logging which is standardised, but this is a much bigger issue than what I was trying to address here, which was finding a way of highlighting messages in the \\(sometimes voluminous\\) output in our various consoles.\n\nI considered a few approaches. One would have been to put ANSI escapes into the print messages and then have Outputbox render ANSI. Unpleasant on both ends. Even worse would be to use separate file descriptor \\(and therefore potentially separate zmq channels when multiprocessing\\) for different levels. I therefore picked a simple enough regexp which would be unlikely to be triggered unintentionally. \n\n\\(A future refinement of logging might choose to look at these messages as they are returned to the main process over zmq and copy matches to a log handler, but in that case that code - or maybe the the log receiver - would add the source, timestamp and so on\\).\n\nI\u2019m happy enough to put it elsewhere, but seems pointless to have to pull it in to particular devices, when it would be harmless to have applied to all BLACS devices?", "markup": "markdown", "html": "<p>You might be right that this is not for putting in qtutils\u2026 </p>\n<p>I shouldn\u2019t have referred to these as \u2018log\u2019 messages. They do not have anything much to do with logging as it is implemented in the main labscript actors (BLACS et al), which is mostly about tracking internal stuff rather than what happens in particular devices. I just exploited the traditional \u2018log levels\u2019 as flags for how messages should be coloured.</p>\n<p>The aim was to get a simple way of having more colourful output in BLACS, runmanager and lyse \u201cterminals\u201d (outputboxes), without overloading stderr with non-error messages (warnings and notices). </p>\n<p>Clearly something needs to be done about logging more generally, because having separate threads write to the same file which then gets clobbered on rollover is not working, and we need to restart BLACS every day - or more often - as a result. The solution to this is of course UDP logging which is standardised, but this is a much bigger issue than what I was trying to address here, which was finding a way of highlighting messages in the (sometimes voluminous) output in our various consoles.</p>\n<p>I considered a few approaches. One would have been to put ANSI escapes into the print messages and then have Outputbox render ANSI. Unpleasant on both ends. Even worse would be to use separate file descriptor (and therefore potentially separate zmq channels when multiprocessing) for different levels. I therefore picked a simple enough regexp which would be unlikely to be triggered unintentionally. </p>\n<p>(A future refinement of logging might choose to look at these messages as they are returned to the main process over zmq and copy matches to a log handler, but in that case that code - or maybe the the log receiver - would add the source, timestamp and so on).</p>\n<p>I\u2019m happy enough to put it elsewhere, but seems pointless to have to pull it in to particular devices, when it would be harmless to have applied to all BLACS devices?</p>", "type": "rendered"}, "created_on": "2018-07-23T08:04:29.224925+00:00", "user": {"display_name": "Lincoln Turner", "uuid": "{7e35ca32-09d7-4a25-a548-32edef727dda}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D"}, "html": {"href": "https://bitbucket.org/%7B7e35ca32-09d7-4a25-a548-32edef727dda%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2ac774c664cd58fc011cc65e0980b4c1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLT-3.png"}}, "nickname": "lincolndturner", "type": "user", "account_id": "5b46a53d845e7e2cdff75ad3"}, "updated_on": "2018-07-23T08:04:29.332855+00:00", "type": "pullrequest_comment", "id": 70680231}