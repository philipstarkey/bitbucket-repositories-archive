{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/38365432.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-38365432"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2017-07-20T20:28:38.289557+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38365432}, {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/38370537.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-38370537"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": "So I didn't write the icons part of this  (@cbillington did) but I believe you just need add an additional set of build functions using pyrrc5. Basically I think we're building a qt resource file containing the icon set so it gets important and available for use using teh standard qt resources syntax (see the recent addition of icons in the labscript suite).\n\n[Documentation](http://pyqt.sourceforge.net/Docs/PyQt5/resources.html) for pyrrc5 indicates it works the same as in pyqt4. So I think you just need to duplicate the appropriate functions [here](#!/philipstarkey/qtutils/src/478e547522b4b3b1a942ce40a49278299db70b88/qtutils/icons/_build.py?at=default&fileviewer=file-view-default) and call from the setup.py script.", "markup": "markdown", "html": "<p>So I didn't write the icons part of this  (@cbillington did) but I believe you just need add an additional set of build functions using pyrrc5. Basically I think we're building a qt resource file containing the icon set so it gets important and available for use using teh standard qt resources syntax (see the recent addition of icons in the labscript suite).</p>\n<p><a data-is-external-link=\"true\" href=\"http://pyqt.sourceforge.net/Docs/PyQt5/resources.html\" rel=\"nofollow\">Documentation</a> for pyrrc5 indicates it works the same as in pyqt4. So I think you just need to duplicate the appropriate functions <a data-is-external-link=\"true\" href=\"#!/philipstarkey/qtutils/src/478e547522b4b3b1a942ce40a49278299db70b88/qtutils/icons/_build.py?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">here</a> and call from the setup.py script.</p>", "type": "rendered"}, "created_on": "2017-07-21T01:28:39.428308+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38370537}, {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/38429175.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-38429175"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": "It was missing the py3 option of pyrrc4 but otherwise now works. Thanks! :)\n\nI think I'll finish up my work on the wrapper and PyQt5 port tomorrow. I'll need to see if further adjustment to the wrapper is needed for BLACS to work. But except for BLACS everything works nicely.", "markup": "markdown", "html": "<p>It was missing the py3 option of pyrrc4 but otherwise now works. Thanks! :)</p>\n<p>I think I'll finish up my work on the wrapper and PyQt5 port tomorrow. I'll need to see if further adjustment to the wrapper is needed for BLACS to work. But except for BLACS everything works nicely.</p>", "type": "rendered"}, "created_on": "2017-07-21T22:31:34.258608+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": "2017-07-21T22:33:24.003146+00:00", "type": "issue_comment", "id": 38429175}, {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/38438612.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-38438612"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": "BLACS will need a significant amount of time allocated for testing. Ideally it would be actively used in a lab for 3-4 consecutive days without restarting the software (including avoiding recompiling the connection table). This is primarily to ensure that our threading behaviour (`invoke_in_main.py`) does not crash under PyQt5. We are technically (apparently) doing thread-unsafe things by calling the thread-safe Qt methods from a Python thread (see https://stackoverflow.com/q/1595649/). However, previous investigation of porting to `QThread` didn't go well (I saw more crashes using `QThread`s) and we've not encountered any problems with PyQt4 mixed with Python threads provided we only call thread-safe Qt methods (which for us is limited to `QApplication.postEvent()`) from the Python thread.\n\nIf everything runs fine for a significant length of time using Python threads on PyQt5, we'd prefer to stick with Python threads (for several reasons).", "markup": "markdown", "html": "<p>BLACS will need a significant amount of time allocated for testing. Ideally it would be actively used in a lab for 3-4 consecutive days without restarting the software (including avoiding recompiling the connection table). This is primarily to ensure that our threading behaviour (<code>invoke_in_main.py</code>) does not crash under PyQt5. We are technically (apparently) doing thread-unsafe things by calling the thread-safe Qt methods from a Python thread (see <a href=\"https://stackoverflow.com/q/1595649/\" rel=\"nofollow\" class=\"ap-connect-link\">https://stackoverflow.com/q/1595649/</a>). However, previous investigation of porting to <code>QThread</code> didn't go well (I saw more crashes using <code>QThread</code>s) and we've not encountered any problems with PyQt4 mixed with Python threads provided we only call thread-safe Qt methods (which for us is limited to <code>QApplication.postEvent()</code>) from the Python thread.</p>\n<p>If everything runs fine for a significant length of time using Python threads on PyQt5, we'd prefer to stick with Python threads (for several reasons).</p>", "type": "rendered"}, "created_on": "2017-07-23T06:06:02.825595+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38438612}, {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/38439123.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-38439123"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": "I could do that as I have a test setup, that exactly mirrors our lab. \nThat way nobody has to \"sacrifice\" their active experiment to be the guinea pig for PyQt5 tests.\nI don't think that things that worked in PyQt4 will break in PyQt5 but it sure is better to test.\n\nOver at Labscript I proposed a order of porting things that starts off with lyse and labscript_utilities/qtwidgets. labscript_utilities/qtwidgets are also used in BLACS do you think this could allready cause problems? \n\nI would think we can without any problems do the imports as everyone still is on PyQt4 anyway. Or are there scenarios where you can have PyQt4 and PyQt5 running at the same time? (I didn't manage to install them simultaneously so that would be of interest anyway)", "markup": "markdown", "html": "<p>I could do that as I have a test setup, that exactly mirrors our lab. \nThat way nobody has to \"sacrifice\" their active experiment to be the guinea pig for PyQt5 tests.\nI don't think that things that worked in PyQt4 will break in PyQt5 but it sure is better to test.</p>\n<p>Over at Labscript I proposed a order of porting things that starts off with lyse and labscript_utilities/qtwidgets. labscript_utilities/qtwidgets are also used in BLACS do you think this could allready cause problems? </p>\n<p>I would think we can without any problems do the imports as everyone still is on PyQt4 anyway. Or are there scenarios where you can have PyQt4 and PyQt5 running at the same time? (I didn't manage to install them simultaneously so that would be of interest anyway)</p>", "type": "rendered"}, "created_on": "2017-07-23T08:18:18.685354+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 38439123}, {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/38448582.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-38448582"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": "Does that depend on [this](https://bitbucket.org/labscript_suite/labscript/issues/26/port-to-pyqt5-and-python3#comment-38448554)?\n\nIn terms of qtutils, as long as we support the switch (API abstraction) between PyQt4 and PyQt5 correctly, then there is no reason why things won't work. Having one process use PyQt4 and another use PyQt5 is no problem (and is probably routinely done by some people using virtualenvs).\n\nThe question is whether we make the labscript suite support multiple Qt toolkits, which I think is a discussion for the thread a linked to.", "markup": "markdown", "html": "<p>Does that depend on <a data-is-external-link=\"true\" href=\"https://bitbucket.org/labscript_suite/labscript/issues/26/port-to-pyqt5-and-python3#comment-38448554\" rel=\"nofollow\">this</a>?</p>\n<p>In terms of qtutils, as long as we support the switch (API abstraction) between PyQt4 and PyQt5 correctly, then there is no reason why things won't work. Having one process use PyQt4 and another use PyQt5 is no problem (and is probably routinely done by some people using virtualenvs).</p>\n<p>The question is whether we make the labscript suite support multiple Qt toolkits, which I think is a discussion for the thread a linked to.</p>", "type": "rendered"}, "created_on": "2017-07-24T05:43:48.881309+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38448582}, {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/39159338.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-39159338"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": "PyQt5 support was introduced in qtutils 2.0.0", "markup": "markdown", "html": "<p>PyQt5 support was introduced in qtutils 2.0.0</p>", "type": "rendered"}, "created_on": "2017-08-17T21:57:01.802913+00:00", "user": {"display_name": "Jan Werkmann", "uuid": "{44c4905c-2b90-4045-a5f1-652b8e228626}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D"}, "html": {"href": "https://bitbucket.org/%7B44c4905c-2b90-4045-a5f1-652b8e228626%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5/07e5095a-4741-4dc0-a462-9c7d455f961d/128"}}, "nickname": "PhyNerd", "type": "user", "account_id": "557058:a70cc9cf-684e-4849-a61a-9ade4d7218b5"}, "updated_on": null, "type": "issue_comment", "id": 39159338}], "page": 1, "size": 7}