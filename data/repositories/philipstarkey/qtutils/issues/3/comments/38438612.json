{"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3/comments/38438612.json"}, "html": {"href": "#!/philipstarkey/qtutils/issues/3#comment-38438612"}}, "issue": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "title": "PyQt5 and abstraction wrapper"}, "content": {"raw": "BLACS will need a significant amount of time allocated for testing. Ideally it would be actively used in a lab for 3-4 consecutive days without restarting the software (including avoiding recompiling the connection table). This is primarily to ensure that our threading behaviour (`invoke_in_main.py`) does not crash under PyQt5. We are technically (apparently) doing thread-unsafe things by calling the thread-safe Qt methods from a Python thread (see https://stackoverflow.com/q/1595649/). However, previous investigation of porting to `QThread` didn't go well (I saw more crashes using `QThread`s) and we've not encountered any problems with PyQt4 mixed with Python threads provided we only call thread-safe Qt methods (which for us is limited to `QApplication.postEvent()`) from the Python thread.\n\nIf everything runs fine for a significant length of time using Python threads on PyQt5, we'd prefer to stick with Python threads (for several reasons).", "markup": "markdown", "html": "<p>BLACS will need a significant amount of time allocated for testing. Ideally it would be actively used in a lab for 3-4 consecutive days without restarting the software (including avoiding recompiling the connection table). This is primarily to ensure that our threading behaviour (<code>invoke_in_main.py</code>) does not crash under PyQt5. We are technically (apparently) doing thread-unsafe things by calling the thread-safe Qt methods from a Python thread (see <a href=\"https://stackoverflow.com/q/1595649/\" rel=\"nofollow\" class=\"ap-connect-link\">https://stackoverflow.com/q/1595649/</a>). However, previous investigation of porting to <code>QThread</code> didn't go well (I saw more crashes using <code>QThread</code>s) and we've not encountered any problems with PyQt4 mixed with Python threads provided we only call thread-safe Qt methods (which for us is limited to <code>QApplication.postEvent()</code>) from the Python thread.</p>\n<p>If everything runs fine for a significant length of time using Python threads on PyQt5, we'd prefer to stick with Python threads (for several reasons).</p>", "type": "rendered"}, "created_on": "2017-07-23T06:06:02.825595+00:00", "user": {"display_name": "Philip Starkey", "uuid": "{48af65db-e5fc-459c-a7eb-52eb1f9a5690}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D"}, "html": {"href": "https://bitbucket.org/%7B48af65db-e5fc-459c-a7eb-52eb1f9a5690%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/dc318537facc47ebe1ae98a7aabacecfd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPS-0.png"}}, "nickname": "pstarkey", "type": "user", "account_id": "557058:52a111e4-40da-4441-9143-417f95f2db97"}, "updated_on": null, "type": "issue_comment", "id": 38438612}