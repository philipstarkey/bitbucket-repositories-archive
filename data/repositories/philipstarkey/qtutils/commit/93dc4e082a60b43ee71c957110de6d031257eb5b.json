{"rendered": {"message": {"raw": "Make outputbox more responsive for large numbers of lines.\n\nThe time to print lines to the GUI scales with the number of lines, and for only\nmodest numbers of lines, the processing time in the GUI thread exceeds the overhead\nof posting the function call to the main thread. Therefore one might as well\nmake smaller batches, and update the GUI more frequently to not hang the GUI in\none large call and so that output is continuously produced rather than all at\nonce after a hang. A batch size as small as ten seems to have good performance.\n\nusing inmain_decorator(False) also seems to make output faster.\n\nThis change actually seems to make output faster all up, i.e. more throughput,\nnot just better responsiveness. I'm not quite sure why, but it is a nice improvement.", "markup": "markdown", "html": "<p>Make outputbox more responsive for large numbers of lines.</p>\n<p>The time to print lines to the GUI scales with the number of lines, and for only<br />\nmodest numbers of lines, the processing time in the GUI thread exceeds the overhead<br />\nof posting the function call to the main thread. Therefore one might as well<br />\nmake smaller batches, and update the GUI more frequently to not hang the GUI in<br />\none large call and so that output is continuously produced rather than all at<br />\nonce after a hang. A batch size as small as ten seems to have good performance.</p>\n<p>using inmain_decorator(False) also seems to make output faster.</p>\n<p>This change actually seems to make output faster all up, i.e. more throughput,<br />\nnot just better responsiveness. I'm not quite sure why, but it is a nice improvement.</p>", "type": "rendered"}}, "hash": "93dc4e082a60b43ee71c957110de6d031257eb5b", "repository": {"links": {"self": {"href": "data/repositories/philipstarkey/qtutils.json"}, "html": {"href": "#!/philipstarkey/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{eb85b0e6-11dc-449a-96ec-21935a03d721}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "philipstarkey/qtutils", "uuid": "{eb85b0e6-11dc-449a-96ec-21935a03d721}"}, "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/93dc4e082a60b43ee71c957110de6d031257eb5b.json"}, "comments": {"href": "data/repositories/philipstarkey/qtutils/commit/93dc4e082a60b43ee71c957110de6d031257eb5b/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/patch/93dc4e082a60b43ee71c957110de6d031257eb5b"}, "html": {"href": "#!/philipstarkey/qtutils/commits/93dc4e082a60b43ee71c957110de6d031257eb5b"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/diff/93dc4e082a60b43ee71c957110de6d031257eb5b"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/philipstarkey/qtutils/commit/93dc4e082a60b43ee71c957110de6d031257eb5b/approve"}, "statuses": {"href": "data/repositories/philipstarkey/qtutils/commit/93dc4e082a60b43ee71c957110de6d031257eb5b/statuses_page=1.json"}}, "author": {"raw": "chrisjbillington", "type": "author"}, "summary": {"raw": "Make outputbox more responsive for large numbers of lines.\n\nThe time to print lines to the GUI scales with the number of lines, and for only\nmodest numbers of lines, the processing time in the GUI thread exceeds the overhead\nof posting the function call to the main thread. Therefore one might as well\nmake smaller batches, and update the GUI more frequently to not hang the GUI in\none large call and so that output is continuously produced rather than all at\nonce after a hang. A batch size as small as ten seems to have good performance.\n\nusing inmain_decorator(False) also seems to make output faster.\n\nThis change actually seems to make output faster all up, i.e. more throughput,\nnot just better responsiveness. I'm not quite sure why, but it is a nice improvement.", "markup": "markdown", "html": "<p>Make outputbox more responsive for large numbers of lines.</p>\n<p>The time to print lines to the GUI scales with the number of lines, and for only<br />\nmodest numbers of lines, the processing time in the GUI thread exceeds the overhead<br />\nof posting the function call to the main thread. Therefore one might as well<br />\nmake smaller batches, and update the GUI more frequently to not hang the GUI in<br />\none large call and so that output is continuously produced rather than all at<br />\nonce after a hang. A batch size as small as ten seems to have good performance.</p>\n<p>using inmain_decorator(False) also seems to make output faster.</p>\n<p>This change actually seems to make output faster all up, i.e. more throughput,<br />\nnot just better responsiveness. I'm not quite sure why, but it is a nice improvement.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "412580d1cb955d27fa98c77a04fa2fa53b1435cc", "type": "commit", "links": {"self": {"href": "data/repositories/philipstarkey/qtutils/commit/412580d1cb955d27fa98c77a04fa2fa53b1435cc.json"}, "html": {"href": "#!/philipstarkey/qtutils/commits/412580d1cb955d27fa98c77a04fa2fa53b1435cc"}}}], "date": "2019-05-09T22:39:34+00:00", "message": "Make outputbox more responsive for large numbers of lines.\n\nThe time to print lines to the GUI scales with the number of lines, and for only\nmodest numbers of lines, the processing time in the GUI thread exceeds the overhead\nof posting the function call to the main thread. Therefore one might as well\nmake smaller batches, and update the GUI more frequently to not hang the GUI in\none large call and so that output is continuously produced rather than all at\nonce after a hang. A batch size as small as ten seems to have good performance.\n\nusing inmain_decorator(False) also seems to make output faster.\n\nThis change actually seems to make output faster all up, i.e. more throughput,\nnot just better responsiveness. I'm not quite sure why, but it is a nice improvement.", "type": "commit", "git_hash": "548a720adb5e3d803c89893a6a23379ec6c64c7b", "tags": null, "branches": "default"}