{"rendered": {"message": {"raw": "Added the Fugue icon set, which is CC licensed and free to use with attribution.\nImporting qtutils.icons will build the required resource file icons.qrc and python\nresource module _icons.py. The latter is then automatically imported, adding the\nresources to any Qt application code importing this module. This code\nassumes PyQt4 and will not work with PySide.\n\nTo use for development:\n\nimport qtutils.icons once, from anywhere, to do the build process.\n\nPoint Qt Designer to <qtutils directory>/icons/icons.qrc. You will then be able\nto select icons from within Qt Designer.\n\nFrom your application, import qtutils.icons before loading the GUI. This will\nregister the resources with PyQt4 by importing the autogenerated _icons.py.\n\nI still need to sort out distribution issues - need to do the build at install\ntime rather than runtime, and ensure devs have access to the .qrc file, which\nQt Designer won't be able to see if it is stuck inside an .egg file. Eggs are\ngoing the way of the dinosaur though, so perhaps this won't be a problem.\nInstalling from pip should be fine. I will investigate.", "markup": "markdown", "html": "<p>Added the Fugue icon set, which is CC licensed and free to use with attribution.<br />\nImporting qtutils.icons will build the required resource file icons.qrc and python<br />\nresource module _icons.py. The latter is then automatically imported, adding the<br />\nresources to any Qt application code importing this module. This code<br />\nassumes PyQt4 and will not work with PySide.</p>\n<p>To use for development:</p>\n<p>import qtutils.icons once, from anywhere, to do the build process.</p>\n<p>Point Qt Designer to &lt;qtutils directory&gt;/icons/icons.qrc. You will then be able<br />\nto select icons from within Qt Designer.</p>\n<p>From your application, import qtutils.icons before loading the GUI. This will<br />\nregister the resources with PyQt4 by importing the autogenerated _icons.py.</p>\n<p>I still need to sort out distribution issues - need to do the build at install<br />\ntime rather than runtime, and ensure devs have access to the .qrc file, which<br />\nQt Designer won't be able to see if it is stuck inside an .egg file. Eggs are<br />\ngoing the way of the dinosaur though, so perhaps this won't be a problem.<br />\nInstalling from pip should be fine. I will investigate.</p>", "type": "rendered"}}, "hash": "5b31c8e130e4e125431044b49cd0ef0f54a567d5", "repository": {"links": {"self": {"href": "data/repositories/cbillington/qtutils.json"}, "html": {"href": "#!/cbillington/qtutils"}, "avatar": {"href": "data/bytebucket.org/ravatar/{0c98b491-bfb0-4ce7-9729-bc4606436bde}ts=python"}}, "type": "repository", "name": "qtutils", "full_name": "cbillington/qtutils", "uuid": "{0c98b491-bfb0-4ce7-9729-bc4606436bde}"}, "links": {"self": {"href": "data/repositories/cbillington/qtutils/commit/5b31c8e130e4e125431044b49cd0ef0f54a567d5.json"}, "comments": {"href": "data/repositories/cbillington/qtutils/commit/5b31c8e130e4e125431044b49cd0ef0f54a567d5/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/patch/5b31c8e130e4e125431044b49cd0ef0f54a567d5"}, "html": {"href": "#!/cbillington/qtutils/commits/5b31c8e130e4e125431044b49cd0ef0f54a567d5"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/diff/5b31c8e130e4e125431044b49cd0ef0f54a567d5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/cbillington/qtutils/commit/5b31c8e130e4e125431044b49cd0ef0f54a567d5/approve"}, "statuses": {"href": "data/repositories/cbillington/qtutils/commit/5b31c8e130e4e125431044b49cd0ef0f54a567d5/statuses_page=1.json"}}, "author": {"raw": "cbilling", "type": "author", "user": {"display_name": "Chris Billington", "uuid": "{e363c5a9-5075-4656-afb5-88bd6a6dceeb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D"}, "html": {"href": "https://bitbucket.org/%7Be363c5a9-5075-4656-afb5-88bd6a6dceeb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9238baf7300c41c0e7294db922899e6ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCB-1.png"}}, "nickname": "cbillington", "type": "user", "account_id": "557058:cbf1bc43-1dc2-477b-9e25-1a8f40fd7ee3"}}, "summary": {"raw": "Added the Fugue icon set, which is CC licensed and free to use with attribution.\nImporting qtutils.icons will build the required resource file icons.qrc and python\nresource module _icons.py. The latter is then automatically imported, adding the\nresources to any Qt application code importing this module. This code\nassumes PyQt4 and will not work with PySide.\n\nTo use for development:\n\nimport qtutils.icons once, from anywhere, to do the build process.\n\nPoint Qt Designer to <qtutils directory>/icons/icons.qrc. You will then be able\nto select icons from within Qt Designer.\n\nFrom your application, import qtutils.icons before loading the GUI. This will\nregister the resources with PyQt4 by importing the autogenerated _icons.py.\n\nI still need to sort out distribution issues - need to do the build at install\ntime rather than runtime, and ensure devs have access to the .qrc file, which\nQt Designer won't be able to see if it is stuck inside an .egg file. Eggs are\ngoing the way of the dinosaur though, so perhaps this won't be a problem.\nInstalling from pip should be fine. I will investigate.", "markup": "markdown", "html": "<p>Added the Fugue icon set, which is CC licensed and free to use with attribution.<br />\nImporting qtutils.icons will build the required resource file icons.qrc and python<br />\nresource module _icons.py. The latter is then automatically imported, adding the<br />\nresources to any Qt application code importing this module. This code<br />\nassumes PyQt4 and will not work with PySide.</p>\n<p>To use for development:</p>\n<p>import qtutils.icons once, from anywhere, to do the build process.</p>\n<p>Point Qt Designer to &lt;qtutils directory&gt;/icons/icons.qrc. You will then be able<br />\nto select icons from within Qt Designer.</p>\n<p>From your application, import qtutils.icons before loading the GUI. This will<br />\nregister the resources with PyQt4 by importing the autogenerated _icons.py.</p>\n<p>I still need to sort out distribution issues - need to do the build at install<br />\ntime rather than runtime, and ensure devs have access to the .qrc file, which<br />\nQt Designer won't be able to see if it is stuck inside an .egg file. Eggs are<br />\ngoing the way of the dinosaur though, so perhaps this won't be a problem.<br />\nInstalling from pip should be fine. I will investigate.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "390cb8f29b3dc1eb629c046f6040334ddbf4f677", "type": "commit", "links": {"self": {"href": "data/repositories/cbillington/qtutils/commit/390cb8f29b3dc1eb629c046f6040334ddbf4f677.json"}, "html": {"href": "#!/cbillington/qtutils/commits/390cb8f29b3dc1eb629c046f6040334ddbf4f677"}}}], "date": "2014-08-19T21:37:33+00:00", "message": "Added the Fugue icon set, which is CC licensed and free to use with attribution.\nImporting qtutils.icons will build the required resource file icons.qrc and python\nresource module _icons.py. The latter is then automatically imported, adding the\nresources to any Qt application code importing this module. This code\nassumes PyQt4 and will not work with PySide.\n\nTo use for development:\n\nimport qtutils.icons once, from anywhere, to do the build process.\n\nPoint Qt Designer to <qtutils directory>/icons/icons.qrc. You will then be able\nto select icons from within Qt Designer.\n\nFrom your application, import qtutils.icons before loading the GUI. This will\nregister the resources with PyQt4 by importing the autogenerated _icons.py.\n\nI still need to sort out distribution issues - need to do the build at install\ntime rather than runtime, and ensure devs have access to the .qrc file, which\nQt Designer won't be able to see if it is stuck inside an .egg file. Eggs are\ngoing the way of the dinosaur though, so perhaps this won't be a problem.\nInstalling from pip should be fine. I will investigate.", "type": "commit", "git_hash": "bf6f57011d028b655c3877b9fe15fd203b9e7d7a", "tags": null, "branches": "default"}